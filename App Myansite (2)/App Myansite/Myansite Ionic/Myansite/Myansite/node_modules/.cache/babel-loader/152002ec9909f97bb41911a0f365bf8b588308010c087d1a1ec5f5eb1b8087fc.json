{"ast":null,"code":"import { createTextVNode as _createTextVNode, unref as _unref, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"ion-padding\"\n};\nconst _hoisted_2 = {\n  class: \"ion-padding\"\n};\nconst _hoisted_3 = {\n  class: \"user-info-section\"\n};\nimport { ref, onMounted } from \"vue\";\nimport { IonPage, IonHeader, IonToolbar, IonTitle, IonContent, IonCard, IonCardContent, IonItem, IonLabel, IonIcon, IonAccordion, IonAccordionGroup, IonImg, IonAvatar } from \"@ionic/vue\";\nimport { chevronDown } from \"ionicons/icons\";\nimport { createClient } from \"@supabase/supabase-js\";\n\n// 👉 Supabase Client\n\nexport default {\n  __name: 'PerfilView',\n  setup(__props) {\n    const supabase = createClient(\"https://neffqwnqpcydidpkysfi.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\" // ⚠️ pon tu key real\n    );\n\n    // Perfil\n    const profileData = ref({\n      username: \"\",\n      avatar_url: \"\",\n      gustos: [],\n      logros: []\n    });\n    const avatarInput = ref(null);\n\n    // 👉 Cambiar avatar\n    const changeAvatar = () => {\n      avatarInput.value.click();\n    };\n    const handleFileChange = async event => {\n      const file = event.target.files[0];\n      if (!file) return;\n      try {\n        const filePath = `avatars/${profileData.value.username}/${Date.now()}.${file.name.split(\".\").pop()}`;\n        const {\n          data,\n          error\n        } = await supabase.storage.from(\"avatars\").upload(filePath, file);\n        if (error) throw error;\n        const publicUrl = `https://neffqwnqpcydidpkysfi.supabase.co/storage/v1/object/public/${data.path}`;\n        const {\n          error: updateError\n        } = await supabase.from(\"profiles\").update({\n          avatar_url: publicUrl\n        }).eq(\"username\", profileData.value.username);\n        if (updateError) throw updateError;\n        profileData.value.avatar_url = publicUrl;\n        alert(\"✅ Imagen de perfil actualizada correctamente!\");\n      } catch (error) {\n        console.error(\"Error al subir la imagen:\", error.message);\n        alert(\"❌ Error al subir la imagen. Inténtalo de nuevo.\");\n      }\n    };\n\n    // 👉 Cargar datos del perfil\n    const fetchProfileData = async () => {\n      try {\n        const usuarioActual = JSON.parse(localStorage.getItem(\"usuario\"));\n        if (!usuarioActual) {\n          console.warn(\"No hay usuario autenticado.\");\n          return;\n        }\n        const {\n          data,\n          error\n        } = await supabase.from(\"perfiles\").select(\"nombre_perfil, avatar_url, gustos, logros\").eq(\"nombre_perfil\", usuarioActual.nombre).single();\n        if (error) throw error;\n        if (data) {\n          profileData.value.username = data.nombre_perfil;\n          profileData.value.avatar_url = data.avatar_url;\n          profileData.value.gustos = data.gustos || [];\n          profileData.value.logros = data.logros || [];\n        }\n      } catch (error) {\n        console.error(\"Error al cargar datos del perfil:\", error.message);\n      }\n    };\n    onMounted(() => {\n      fetchProfileData();\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createBlock(_unref(IonPage), null, {\n        default: _withCtx(() => [_createVNode(_unref(IonHeader), null, {\n          default: _withCtx(() => [_createVNode(_unref(IonToolbar), null, {\n            default: _withCtx(() => [_createVNode(_unref(IonTitle), null, {\n              default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"Perfil\")])),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_unref(IonContent), {\n          class: \"ion-padding\"\n        }, {\n          default: _withCtx(() => [_createVNode(_unref(IonCard), null, {\n            default: _withCtx(() => [_createVNode(_unref(IonImg), {\n              src: \"\",\n              alt: \"Fondo del perfil\"\n            }), _createVNode(_unref(IonCardContent), null, {\n              default: _withCtx(() => [_createVNode(_unref(IonAccordionGroup), null, {\n                default: _withCtx(() => [_createVNode(_unref(IonAccordion), {\n                  value: \"gustos\"\n                }, {\n                  header: _withCtx(() => [_createVNode(_unref(IonItem), {\n                    button: \"\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_unref(IonLabel), null, {\n                      default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"Gustos\")])),\n                      _: 1\n                    }), _createVNode(_unref(IonIcon), {\n                      icon: _unref(chevronDown),\n                      slot: \"end\"\n                    }, null, 8, [\"icon\"])]),\n                    _: 1\n                  })]),\n                  content: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(profileData.value.gustos, (gusto, index) => {\n                    return _openBlock(), _createElementBlock(\"li\", {\n                      key: index\n                    }, _toDisplayString(gusto), 1);\n                  }), 128))])])]),\n                  _: 1\n                }), _createVNode(_unref(IonAccordion), {\n                  value: \"logros\"\n                }, {\n                  header: _withCtx(() => [_createVNode(_unref(IonItem), {\n                    button: \"\"\n                  }, {\n                    default: _withCtx(() => [_createVNode(_unref(IonLabel), null, {\n                      default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Logros\")])),\n                      _: 1\n                    }), _createVNode(_unref(IonIcon), {\n                      icon: _unref(chevronDown),\n                      slot: \"end\"\n                    }, null, 8, [\"icon\"])]),\n                    _: 1\n                  })]),\n                  content: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(profileData.value.logros, (logro, index) => {\n                    return _openBlock(), _createElementBlock(\"li\", {\n                      key: index\n                    }, _toDisplayString(logro), 1);\n                  }), 128))])])]),\n                  _: 1\n                })]),\n                _: 1\n              }), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", {\n                class: \"user-avatar-container\",\n                onClick: changeAvatar\n              }, [_createVNode(_unref(IonAvatar), null, {\n                default: _withCtx(() => [_createVNode(_unref(IonImg), {\n                  src: profileData.value.avatar_url,\n                  alt: \"Avatar del usuario\"\n                }, null, 8, [\"src\"])]),\n                _: 1\n              }), _createElementVNode(\"input\", {\n                type: \"file\",\n                ref_key: \"avatarInput\",\n                ref: avatarInput,\n                style: {\n                  \"display\": \"none\"\n                },\n                onChange: handleFileChange,\n                accept: \"image/*\"\n              }, null, 544)]), _createVNode(_unref(IonLabel), {\n                class: \"username\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(profileData.value.username), 1)]),\n                _: 1\n              })])]),\n              _: 1\n            })]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      });\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}