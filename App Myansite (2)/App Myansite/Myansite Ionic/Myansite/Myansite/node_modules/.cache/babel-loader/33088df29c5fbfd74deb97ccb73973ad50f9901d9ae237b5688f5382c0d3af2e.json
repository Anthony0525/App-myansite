{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: \"RickAndMorty\",\n  data() {\n    return {\n      characters: [],\n      // Lista de personajes\n      selectedCharacter: null,\n      // Personaje seleccionado\n      episodes: [] // Lista de episodios del detalle\n    };\n  },\n  mounted() {\n    this.getCharacters(); // ðŸ”¹ Cuando el componente cargue, trae los personajes\n  },\n  methods: {\n    async getCharacters() {\n      try {\n        const res = await fetch(\"https://rickandmortyapi.com/api/character\");\n        const data = await res.json();\n        this.characters = data.results;\n      } catch (error) {\n        console.error(\"Error al traer personajes:\", error);\n      }\n    },\n    async showDetail(character) {\n      this.selectedCharacter = character;\n\n      // Traer episodios\n      try {\n        const episodesData = await Promise.all(character.episode.map(url => fetch(url).then(r => r.json())));\n        this.episodes = episodesData;\n      } catch (error) {\n        console.error(\"Error al traer episodios:\", error);\n      }\n    },\n    goBack() {\n      this.selectedCharacter = null; // Volvemos al listado\n      this.episodes = [];\n    }\n  }\n};","map":{"version":3,"names":["name","data","characters","selectedCharacter","episodes","mounted","getCharacters","methods","res","fetch","json","results","error","console","showDetail","character","episodesData","Promise","all","episode","map","url","then","r","goBack"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\RickAndMorty.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Listado de personajes -->\r\n    <div id=\"charactersContainer\" class=\"characters-container\" v-if=\"!selectedCharacter\">\r\n      <div \r\n        v-for=\"character in characters\" \r\n        :key=\"character.id\" \r\n        class=\"character-card\"\r\n        @click=\"showDetail(character)\"\r\n      >\r\n        <img :src=\"character.image\" :alt=\"character.name\" />\r\n        <h1>{{ character.name }}</h1>\r\n        <p>{{ character.species }}</p>\r\n        <p>{{ character.status }}</p>\r\n        <p>{{ character.location.name }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Vista detalle -->\r\n    <div id=\"detailView\" v-if=\"selectedCharacter\">\r\n      <button @click=\"goBack\">Volver</button>\r\n      <h1>{{ selectedCharacter.name }}</h1>\r\n      <img :src=\"selectedCharacter.image\" alt=\"Personaje\" />\r\n      <h2>Episodios:</h2>\r\n      <ul>\r\n        <li v-for=\"ep in episodes\" :key=\"ep.id\">\r\n          {{ ep.episode }} - {{ ep.name }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"RickAndMorty\",\r\n  data() {\r\n    return {\r\n      characters: [],          // Lista de personajes\r\n      selectedCharacter: null, // Personaje seleccionado\r\n      episodes: []             // Lista de episodios del detalle\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getCharacters(); // ðŸ”¹ Cuando el componente cargue, trae los personajes\r\n  },\r\n  methods: {\r\n    async getCharacters() {\r\n      try {\r\n        const res = await fetch(\"https://rickandmortyapi.com/api/character\");\r\n        const data = await res.json();\r\n        this.characters = data.results;\r\n      } catch (error) {\r\n        console.error(\"Error al traer personajes:\", error);\r\n      }\r\n    },\r\n    async showDetail(character) {\r\n      this.selectedCharacter = character;\r\n\r\n      // Traer episodios\r\n      try {\r\n        const episodesData = await Promise.all(\r\n          character.episode.map(url => fetch(url).then(r => r.json()))\r\n        );\r\n        this.episodes = episodesData;\r\n      } catch (error) {\r\n        console.error(\"Error al traer episodios:\", error);\r\n      }\r\n    },\r\n    goBack() {\r\n      this.selectedCharacter = null; // Volvemos al listado\r\n      this.episodes = [];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.characters-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin: 2rem;\r\n}\r\n\r\n.character-card {\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  background: #f9f9f9;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.character-card:hover {\r\n  transform: scale(1.05);\r\n  cursor: pointer;\r\n}\r\n\r\n.character-card img {\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n"],"mappings":";;AAkCA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MAAW;MACzBC,iBAAiB,EAAE,IAAI;MAAE;MACzBC,QAAQ,EAAE,EAAC,CAAc;IAC3B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,GAAE,GAAI,MAAMC,KAAK,CAAC,2CAA2C,CAAC;QACpE,MAAMR,IAAG,GAAI,MAAMO,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACR,UAAS,GAAID,IAAI,CAACU,OAAO;MAChC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,SAAS,EAAE;MAC1B,IAAI,CAACZ,iBAAgB,GAAIY,SAAS;;MAElC;MACA,IAAI;QACF,MAAMC,YAAW,GAAI,MAAMC,OAAO,CAACC,GAAG,CACpCH,SAAS,CAACI,OAAO,CAACC,GAAG,CAACC,GAAE,IAAKZ,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACb,IAAI,CAAC,CAAC,CAAC,CAC7D,CAAC;QACD,IAAI,CAACN,QAAO,GAAIY,YAAY;MAC9B,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDY,MAAMA,CAAA,EAAG;MACP,IAAI,CAACrB,iBAAgB,GAAI,IAAI,EAAE;MAC/B,IAAI,CAACC,QAAO,GAAI,EAAE;IACpB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}