{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      characters: [],\n      selectedCharacter: null,\n      episodes: []\n    };\n  },\n  methods: {\n    async fetchCharacters() {\n      try {\n        const res = await fetch(\"https://rickandmortyapi.com/api/character\");\n        const data = await res.json();\n        this.characters = data.results;\n      } catch (error) {\n        console.error(\"Error cargando personajes:\", error);\n      }\n    },\n    async selectCharacter(character) {\n      this.selectedCharacter = character;\n      this.episodes = [];\n      try {\n        const episodeData = await Promise.all(character.episode.map(url => fetch(url).then(r => r.json())));\n        this.episodes = episodeData;\n      } catch (error) {\n        console.error(\"Error cargando episodios:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchCharacters();\n  }\n};","map":{"version":3,"names":["data","characters","selectedCharacter","episodes","methods","fetchCharacters","res","fetch","json","results","error","console","selectCharacter","character","episodeData","Promise","all","episode","map","url","then","r","mounted"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <header>\n      <h1 id=\"titulo\">Personajes Rick and Morty [Adult Swim]</h1>\n    </header>\n\n    <nav>\n      <ul>\n        <div id=\"Menu\">\n          <li><a class=\"menua\" href=\"portafolio.html\">Portafolio</a></li>\n          <li><a class=\"menua\" href=\"anime.html\">Anime</a></li>\n          <li><a class=\"menua\" href=\"index.html\">Rick and Morty</a></li>\n        </div>\n      </ul>\n    </nav>\n\n    <main>\n      <section id=\"inicio\">\n        <!-- Contenedor de personajes -->\n        <div v-if=\"!selectedCharacter\" id=\"charactersContainer\" class=\"characters-container\">\n          <div v-for=\"character in characters\" :key=\"character.id\" class=\"character-card\" @click=\"selectCharacter(character)\">\n            <img :src=\"character.image\" :alt=\"character.name\" />\n            <h1>{{ character.name }}</h1>\n            <p>{{ character.species }}</p>\n            <p>{{ character.status }}</p>\n            <p>{{ character.location.name }}</p>\n          </div>\n        </div>\n\n        <!-- Vista de detalle -->\n        <div v-else id=\"detailView\">\n          <button id=\"backBtn\" @click=\"selectedCharacter = null\">Volver</button>\n          <h2 id=\"characterName\">{{ selectedCharacter.name }}</h2>\n          <img id=\"characterImage\" :src=\"selectedCharacter.image\" />\n          <h3>Episodios</h3>\n          <ul id=\"episodesList\">\n            <li v-for=\"ep in episodes\" :key=\"ep.id\">\n              {{ ep.episode }} - {{ ep.name }}\n            </li>\n          </ul>\n        </div>\n      </section>\n    </main>\n\n    <footer>\n      <p>Todos los derechos reservados.</p>\n    </footer>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      characters: [],\n      selectedCharacter: null,\n      episodes: []\n    };\n  },\n  methods: {\n    async fetchCharacters() {\n      try {\n        const res = await fetch(\"https://rickandmortyapi.com/api/character\");\n        const data = await res.json();\n        this.characters = data.results;\n      } catch (error) {\n        console.error(\"Error cargando personajes:\", error);\n      }\n    },\n    async selectCharacter(character) {\n      this.selectedCharacter = character;\n      this.episodes = [];\n\n      try {\n        const episodeData = await Promise.all(\n          character.episode.map((url) => fetch(url).then((r) => r.json()))\n        );\n        this.episodes = episodeData;\n      } catch (error) {\n        console.error(\"Error cargando episodios:\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchCharacters();\n  }\n};\n</script>\n"],"mappings":";;AAmDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,iBAAiB,EAAE,IAAI;MACvBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,2CAA2C,CAAC;QACpE,MAAMP,IAAG,GAAI,MAAMM,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACP,UAAS,GAAID,IAAI,CAACS,OAAO;MAChC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD,MAAME,eAAeA,CAACC,SAAS,EAAE;MAC/B,IAAI,CAACX,iBAAgB,GAAIW,SAAS;MAClC,IAAI,CAACV,QAAO,GAAI,EAAE;MAElB,IAAI;QACF,MAAMW,WAAU,GAAI,MAAMC,OAAO,CAACC,GAAG,CACnCH,SAAS,CAACI,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAKZ,KAAK,CAACY,GAAG,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACb,IAAI,CAAC,CAAC,CAAC,CACjE,CAAC;QACD,IAAI,CAACL,QAAO,GAAIW,WAAW;MAC7B,EAAE,OAAOJ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF;EACF,CAAC;EACDY,OAAOA,CAAA,EAAG;IACR,IAAI,CAACjB,eAAe,CAAC,CAAC;EACxB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}