{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport { createClient } from \"@supabase/supabase-js\";\nimport \"@/assets/Perfil.css\";\n\n// 👉 Usando la misma constante de Supabase que proporcionaste\n\nexport default {\n  __name: 'PerfilView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const supabase = createClient(\"https://neffqwnqpcydidpkysfi.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5lZmZxd25xcGN5ZGlkcGt5c2ZpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY3Nzc5MTUsImV4cCI6MjA3MjM1MzkxNX0.I_fwrJYMhKoh2Irlhqub3B5Kn4-JxuJR-XnLhGjUykw\");\n\n    // Estado del acordeón\n    const activeAccordion = ref(null);\n\n    // 👉 Eliminando datos fijos y usando un objeto vacío\n    const profileData = ref({\n      username: '',\n      avatar_url: '',\n      gustos: [],\n      logros: []\n    });\n\n    // Referencia al input de archivo para cambiar el avatar\n    const avatarInput = ref(null);\n\n    // Lógica para abrir/cerrar acordeones\n    const toggleAccordion = panelName => {\n      activeAccordion.value = activeAccordion.value === panelName ? null : panelName;\n    };\n\n    // Función para activar el input de archivo al hacer clic en el avatar\n    const changeAvatar = () => {\n      avatarInput.value.click();\n    };\n\n    // Maneja la selección del archivo y lo sube a Supabase Storage\n    const handleFileChange = async event => {\n      const file = event.target.files[0];\n      if (!file) return;\n      try {\n        const filePath = `avatars/${profileData.value.username}/${Date.now()}.${file.name.split('.').pop()}`;\n        const {\n          data,\n          error\n        } = await supabase.storage.from('avatars').upload(filePath, file);\n        if (error) throw error;\n        const publicUrl = `https://neffqwnqpcydidpkysfi.supabase.co/storage/v1/object/public/${data.path}`;\n        const {\n          error: updateError\n        } = await supabase.from('profiles').update({\n          avatar_url: publicUrl\n        }).eq('username', profileData.value.username);\n        if (updateError) throw updateError;\n        profileData.value.avatar_url = publicUrl;\n        alert('✅ Imagen de perfil actualizada correctamente!');\n      } catch (error) {\n        console.error('Error al subir la imagen:', error.message);\n        alert('❌ Error al subir la imagen. Inténtalo de nuevo.');\n      }\n    };\n\n    // 👉 Función para cargar todos los datos del perfil\n    const fetchProfileData = async () => {\n      try {\n        // ⚠️ Importante: Obtener el nombre de usuario del usuario autenticado\n        const usuarioActual = JSON.parse(localStorage.getItem(\"usuario\"));\n        if (!usuarioActual) {\n          console.warn(\"No hay usuario autenticado.\");\n          return;\n        }\n        const {\n          data,\n          error\n        } = await supabase.from('profiles').select('username, avatar_url, gustos, logros').eq('username', usuarioActual.nombre) // 👈 Usa el nombre del usuario logeado\n        .single();\n        if (error) {\n          if (error.code === 'PGRST116') {\n            console.warn('Usuario no encontrado en la tabla de perfiles.');\n          } else {\n            throw error;\n          }\n        }\n        if (data) {\n          profileData.value.username = data.username;\n          profileData.value.avatar_url = data.avatar_url;\n          profileData.value.gustos = data.gustos || [];\n          profileData.value.logros = data.logros || [];\n        }\n      } catch (error) {\n        console.error('Error al cargar datos del perfil:', error.message);\n      }\n    };\n    onMounted(() => {\n      fetchProfileData();\n    });\n    const __returned__ = {\n      supabase,\n      activeAccordion,\n      profileData,\n      avatarInput,\n      toggleAccordion,\n      changeAvatar,\n      handleFileChange,\n      fetchProfileData,\n      ref,\n      onMounted,\n      get createClient() {\n        return createClient;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","createClient","supabase","activeAccordion","profileData","username","avatar_url","gustos","logros","avatarInput","toggleAccordion","panelName","value","changeAvatar","click","handleFileChange","event","file","target","files","filePath","Date","now","name","split","pop","data","error","storage","from","upload","publicUrl","path","updateError","update","eq","alert","console","message","fetchProfileData","usuarioActual","JSON","parse","localStorage","getItem","warn","select","nombre","single","code"],"sources":["C:/Users/ellen/Downloads/App en Vue/Myansite/Myansite/src/views/PerfilView.vue"],"sourcesContent":["<template>\r\n  <div class=\"profile-container\">\r\n    <div class=\"profile-card\">\r\n      <div class=\"top-section\">\r\n        <div class=\"label-box\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-camera\"><path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path><circle cx=\"12\" cy=\"13\" r=\"4\"></circle></svg>\r\n          <span>Label</span>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"profile-content\">\r\n        <img src=\"\" alt=\"Fondo del perfil\" class=\"content-image\" />\r\n        \r\n        <button\r\n          class=\"accordion-button\"\r\n          :class=\"{ 'is-active': activeAccordion === 'gustos' }\"\r\n          @click=\"toggleAccordion('gustos')\"\r\n        >\r\n          Gustos\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>\r\n        </button>\r\n        <div class=\"accordion-panel\" :class=\"{ 'is-active': activeAccordion === 'gustos' }\">\r\n          <ul>\r\n            <li v-for=\"(gusto, index) in profileData.gustos\" :key=\"index\">{{ gusto }}</li>\r\n          </ul>\r\n        </div>\r\n        \r\n        <button\r\n          class=\"accordion-button\"\r\n          :class=\"{ 'is-active': activeAccordion === 'logros' }\"\r\n          @click=\"toggleAccordion('logros')\"\r\n        >\r\n          Logros\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-chevron-down\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>\r\n        </button>\r\n        <div class=\"accordion-panel\" :class=\"{ 'is-active': activeAccordion === 'logros' }\">\r\n          <ul>\r\n            <li v-for=\"(logro, index) in profileData.logros\" :key=\"index\">{{ logro }}</li>\r\n          </ul>\r\n        </div>\r\n        \r\n        <div class=\"user-info-section\">\r\n          <div class=\"user-avatar-container\" @click=\"changeAvatar\">\r\n            <img :src=\"profileData.avatar_url\" alt=\"Avatar del usuario\" class=\"user-avatar\" />\r\n            <input\r\n              type=\"file\"\r\n              ref=\"avatarInput\"\r\n              style=\"display: none\"\r\n              @change=\"handleFileChange\"\r\n              accept=\"image/*\"\r\n            />\r\n          </div>\r\n          <span class=\"username\">{{ profileData.username }}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from \"vue\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport \"@/assets/Perfil.css\";\r\n\r\n// 👉 Usando la misma constante de Supabase que proporcionaste\r\nconst supabase = createClient(\"https://neffqwnqpcydidpkysfi.supabase.co\", \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5lZmZxd25xcGN5ZGlkcGt5c2ZpIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY3Nzc5MTUsImV4cCI6MjA3MjM1MzkxNX0.I_fwrJYMhKoh2Irlhqub3B5Kn4-JxuJR-XnLhGjUykw\");\r\n\r\n// Estado del acordeón\r\nconst activeAccordion = ref(null);\r\n\r\n// 👉 Eliminando datos fijos y usando un objeto vacío\r\nconst profileData = ref({\r\n  username: '',\r\n  avatar_url: '',\r\n  gustos: [],\r\n  logros: []\r\n});\r\n\r\n// Referencia al input de archivo para cambiar el avatar\r\nconst avatarInput = ref(null);\r\n\r\n// Lógica para abrir/cerrar acordeones\r\nconst toggleAccordion = (panelName) => {\r\n  activeAccordion.value = activeAccordion.value === panelName ? null : panelName;\r\n};\r\n\r\n// Función para activar el input de archivo al hacer clic en el avatar\r\nconst changeAvatar = () => {\r\n  avatarInput.value.click();\r\n};\r\n\r\n// Maneja la selección del archivo y lo sube a Supabase Storage\r\nconst handleFileChange = async (event) => {\r\n  const file = event.target.files[0];\r\n  if (!file) return;\r\n\r\n  try {\r\n    const filePath = `avatars/${profileData.value.username}/${Date.now()}.${file.name.split('.').pop()}`;\r\n    \r\n    const { data, error } = await supabase.storage\r\n      .from('avatars')\r\n      .upload(filePath, file);\r\n\r\n    if (error) throw error;\r\n\r\n    const publicUrl = `https://neffqwnqpcydidpkysfi.supabase.co/storage/v1/object/public/${data.path}`;\r\n    \r\n    const { error: updateError } = await supabase\r\n      .from('profiles')\r\n      .update({ avatar_url: publicUrl })\r\n      .eq('username', profileData.value.username);\r\n\r\n    if (updateError) throw updateError;\r\n    \r\n    profileData.value.avatar_url = publicUrl;\r\n\r\n    alert('✅ Imagen de perfil actualizada correctamente!');\r\n  } catch (error) {\r\n    console.error('Error al subir la imagen:', error.message);\r\n    alert('❌ Error al subir la imagen. Inténtalo de nuevo.');\r\n  }\r\n};\r\n\r\n// 👉 Función para cargar todos los datos del perfil\r\nconst fetchProfileData = async () => {\r\n  try {\r\n    // ⚠️ Importante: Obtener el nombre de usuario del usuario autenticado\r\n    const usuarioActual = JSON.parse(localStorage.getItem(\"usuario\"));\r\n    if (!usuarioActual) {\r\n      console.warn(\"No hay usuario autenticado.\");\r\n      return;\r\n    }\r\n    \r\n    const { data, error } = await supabase\r\n      .from('profiles')\r\n      .select('username, avatar_url, gustos, logros')\r\n      .eq('username', usuarioActual.nombre) // 👈 Usa el nombre del usuario logeado\r\n      .single();\r\n\r\n    if (error) {\r\n      if (error.code === 'PGRST116') {\r\n        console.warn('Usuario no encontrado en la tabla de perfiles.');\r\n      } else {\r\n        throw error;\r\n      }\r\n    }\r\n    \r\n    if (data) {\r\n      profileData.value.username = data.username;\r\n      profileData.value.avatar_url = data.avatar_url;\r\n      profileData.value.gustos = data.gustos || [];\r\n      profileData.value.logros = data.logros || [];\r\n    }\r\n  } catch (error) {\r\n    console.error('Error al cargar datos del perfil:', error.message);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  fetchProfileData();\r\n});\r\n</script>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}