{"ast":null,"code":"import '@/assets/anime.css';\nexport default {\n  name: 'AnimeView',\n  data() {\n    return {\n      animes: [],\n      showModal: false,\n      selectedAnime: null\n    };\n  },\n  computed: {\n    selectedAnimeImage() {\n      if (!this.selectedAnime) return '';\n      return this.selectedAnime.images?.jpg?.large_image_url || this.selectedAnime.images?.jpg?.image_url || '';\n    }\n  },\n  mounted() {\n    this.loadAnimes();\n  },\n  methods: {\n    async loadAnimes() {\n      try {\n        // ðŸ”¹ AquÃ­ tienes todos los animes que pusiste\n        this.animes = await import('@/assets/animes.json').then(m => m.default);\n      } catch (err) {\n        console.error(\"Error cargando animes:\", err);\n      }\n    },\n    showDetail(anime) {\n      this.selectedAnime = anime;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n      this.selectedAnime = null;\n    }\n  }\n};","map":{"version":3,"names":["name","data","animes","showModal","selectedAnime","computed","selectedAnimeImage","images","jpg","large_image_url","image_url","mounted","loadAnimes","methods","then","m","default","err","console","error","showDetail","anime","closeModal"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\AnimeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"anime-view\">\r\n    <!-- Contenedor de cards -->\r\n    <div id=\"charactersContainer\" class=\"characters-container\">\r\n      <div \r\n        v-for=\"anime in animes\" \r\n        :key=\"anime.id\" \r\n        class=\"character-card\"\r\n        @click=\"showDetail(anime)\"\r\n      >\r\n        <img :src=\"anime.images?.jpg?.image_url || ''\" :alt=\"anime.title\" />\r\n        <h3>{{ anime.title }}</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para detalle de anime -->\r\n    <div v-if=\"showModal\" class=\"modal\" @click.self=\"closeModal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <img :src=\"selectedAnimeImage\" alt=\"Anime\" />\r\n        <h2>{{ selectedAnime?.title }}</h2>\r\n        <p>{{ selectedAnime?.synopsis || 'Sinopsis no disponible.' }}</p>\r\n        <p><strong>Tipo:</strong> {{ selectedAnime?.type }}</p>\r\n        <p><strong>Episodios:</strong> {{ selectedAnime?.episodes || 'Desconocido' }}</p>\r\n        <p><strong>AÃ±o:</strong> {{ selectedAnime?.year || 'N/A' }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '@/assets/anime.css'\r\n\r\nexport default {\r\n  name: 'AnimeView',\r\n  data() {\r\n    return {\r\n      animes: [],\r\n      showModal: false,\r\n      selectedAnime: null\r\n    }\r\n  },\r\n  computed: {\r\n    selectedAnimeImage() {\r\n      if (!this.selectedAnime) return '';\r\n      return this.selectedAnime.images?.jpg?.large_image_url || \r\n             this.selectedAnime.images?.jpg?.image_url || '';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadAnimes();\r\n  },\r\n  methods: {\r\n    async loadAnimes() {\r\n      try {\r\n        // ðŸ”¹ AquÃ­ tienes todos los animes que pusiste\r\n        this.animes = await import('@/assets/animes.json').then(m => m.default)\r\n      } catch (err) {\r\n        console.error(\"Error cargando animes:\", err);\r\n      }\r\n    },\r\n    showDetail(anime) {\r\n      this.selectedAnime = anime;\r\n      this.showModal = true;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.selectedAnime = null;\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"AA+BA,OAAO,oBAAmB;AAE1B,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,KAAK;MAChBC,aAAa,EAAE;IACjB;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAACF,aAAa,EAAE,OAAO,EAAE;MAClC,OAAO,IAAI,CAACA,aAAa,CAACG,MAAM,EAAEC,GAAG,EAAEC,eAAc,IAC9C,IAAI,CAACL,aAAa,CAACG,MAAM,EAAEC,GAAG,EAAEE,SAAQ,IAAK,EAAE;IACxD;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF;QACA,IAAI,CAACV,MAAK,GAAI,MAAM,MAAM,CAAC,sBAAsB,CAAC,CAACY,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,OAAO;MACxE,EAAE,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC9C;IACF,CAAC;IACDG,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAI,CAACjB,aAAY,GAAIiB,KAAK;MAC1B,IAAI,CAAClB,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDmB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACnB,SAAQ,GAAI,KAAK;MACtB,IAAI,CAACC,aAAY,GAAI,IAAI;IAC3B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}