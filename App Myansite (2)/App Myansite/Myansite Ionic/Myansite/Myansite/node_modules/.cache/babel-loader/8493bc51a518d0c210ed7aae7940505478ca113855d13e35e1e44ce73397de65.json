{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"characters-container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  class: \"modal-content\"\n};\nconst _hoisted_5 = [\"src\", \"alt\"];\nconst _hoisted_6 = {\n  class: \"episodes-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Listado de personajes \"), !$data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.characters, character => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: character.id,\n      class: \"character-card\",\n      onClick: $event => $options.showDetail(character)\n    }, [_createElementVNode(\"img\", {\n      src: character.image,\n      alt: character.name\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"h3\", null, _toDisplayString(character.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_createElementVNode(\"span\", {\n      class: _normalizeClass('status-indicator status-' + character.status.toLowerCase())\n    }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString(character.status) + \" - \" + _toDisplayString(character.species), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Última ubicación: \" + _toDisplayString(character.location.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Modal para detalles (como en AnimeView) \"), _createElementVNode(\"div\", {\n    class: \"modal\",\n    style: _normalizeStyle({\n      display: $data.showModal ? 'flex' : 'none'\n    })\n  }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"×\"), _createElementVNode(\"img\", {\n    src: $data.selectedCharacter?.image,\n    alt: $data.selectedCharacter?.name\n  }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"h2\", null, _toDisplayString($data.selectedCharacter?.name), 1 /* TEXT */), _createElementVNode(\"p\", null, [_createElementVNode(\"span\", {\n    class: _normalizeClass('status-indicator status-' + $data.selectedCharacter?.status?.toLowerCase())\n  }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString($data.selectedCharacter?.status) + \" - \" + _toDisplayString($data.selectedCharacter?.species), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"strong\", null, \"Género:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedCharacter?.gender), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Origen:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedCharacter?.origin?.name), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Última ubicación:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedCharacter?.location?.name), 1 /* TEXT */)]), _cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"Episodios:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.episodes, (ep, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, _toDisplayString(ep.episode) + \" - \" + _toDisplayString(ep.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 4 /* STYLE */)]);\n}","map":{"version":3,"names":["key","class","_createElementBlock","_createCommentVNode","$data","showModal","_hoisted_1","_Fragment","_renderList","characters","character","id","onClick","$event","$options","showDetail","_createElementVNode","src","image","alt","name","_hoisted_3","_toDisplayString","_normalizeClass","status","toLowerCase","_createTextVNode","species","location","_hoisted_2","style","_normalizeStyle","display","_hoisted_4","_cache","args","closeModal","selectedCharacter","_hoisted_5","gender","origin","_hoisted_6","episodes","ep","index","episode"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\RickAndMorty.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Listado de personajes -->\r\n    <div class=\"characters-container\" v-if=\"!showModal\">\r\n      <div \r\n        v-for=\"character in characters\" \r\n        :key=\"character.id\" \r\n        class=\"character-card\"\r\n        @click=\"showDetail(character)\"\r\n      >\r\n        <img :src=\"character.image\" :alt=\"character.name\" />\r\n        <h3>{{ character.name }}</h3>\r\n        <p>\r\n          <span :class=\"'status-indicator status-' + character.status.toLowerCase()\"></span>\r\n          {{ character.status }} - {{ character.species }}\r\n        </p>\r\n        <p>Última ubicación: {{ character.location.name }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para detalles (como en AnimeView) -->\r\n    <div class=\"modal\" :style=\"{ display: showModal ? 'flex' : 'none' }\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        \r\n        <img :src=\"selectedCharacter?.image\" :alt=\"selectedCharacter?.name\" />\r\n        <h2>{{ selectedCharacter?.name }}</h2>\r\n        \r\n        <p>\r\n          <span :class=\"'status-indicator status-' + selectedCharacter?.status?.toLowerCase()\"></span>\r\n          {{ selectedCharacter?.status }} - {{ selectedCharacter?.species }}\r\n        </p>\r\n        \r\n        <p><strong>Género:</strong> {{ selectedCharacter?.gender }}</p>\r\n        <p><strong>Origen:</strong> {{ selectedCharacter?.origin?.name }}</p>\r\n        <p><strong>Última ubicación:</strong> {{ selectedCharacter?.location?.name }}</p>\r\n        \r\n        <h3>Episodios:</h3>\r\n        <ul class=\"episodes-list\">\r\n          <li v-for=\"(ep, index) in episodes\" :key=\"index\">\r\n            {{ ep.episode }} - {{ ep.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'RickAndMorty',\r\n  data() {\r\n    return {\r\n      characters: [],\r\n      showModal: false,\r\n      selectedCharacter: null,\r\n      episodes: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getCharacters()\r\n    // Cerrar modal al hacer clic fuera\r\n    window.addEventListener('click', this.handleClickOutside)\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('click', this.handleClickOutside)\r\n  },\r\n  methods: {\r\n    async getCharacters() {\r\n      try {\r\n        const response = await axios.get('https://rickandmortyapi.com/api/character')\r\n        this.characters = response.data.results\r\n      } catch (error) {\r\n        console.error('Error al obtener personajes:', error)\r\n      }\r\n    },\r\n    async showDetail(character) {\r\n      this.selectedCharacter = character\r\n      this.showModal = true\r\n      \r\n      try {\r\n        // Limitar a 5 episodios para mejor rendimiento\r\n        const episodeRequests = character.episode.slice(0, 5).map(url => axios.get(url))\r\n        const responses = await Promise.all(episodeRequests)\r\n        this.episodes = responses.map(response => response.data)\r\n      } catch (error) {\r\n        console.error('Error al obtener episodios:', error)\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.showModal = false\r\n      this.selectedCharacter = null\r\n      this.episodes = []\r\n    },\r\n    handleClickOutside(event) {\r\n      // Cerrar modal si se hace clic fuera del contenido\r\n      if (event.target.classList.contains('modal')) {\r\n        this.closeModal()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.characters-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.character-card {\r\n  border: 5px solid #42b983;\r\n  border-radius: 12px;\r\n  padding: 15px;\r\n  background: linear-gradient(145deg, #2a2a4a, #1a1a2e);\r\n  text-align: center;\r\n  box-shadow: 5px 5px 15px rgba(0, 0, 0, 0.5);\r\n  transition: transform 0.4s, background-color 0.4s;\r\n  cursor: pointer;\r\n}\r\n\r\n.character-card:hover {\r\n  transform: scale(0.95);\r\n  background-color: #555454;\r\n}\r\n\r\n.character-card img {\r\n  width: 90%;\r\n  height: auto;\r\n  border-radius: 8px;\r\n  margin-bottom: 10px;\r\n  border: 2px solid #42b983;\r\n}\r\n\r\n.character-card h3 {\r\n  color: #42b983;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.character-card p {\r\n  color: #a0aec0;\r\n  margin-bottom: 5px;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n/* ESTILOS DEL MODAL (igual que en AnimeView) */\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  z-index: 999;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-content {\r\n  background: linear-gradient(145deg, #2a2a4a, #1a1a2e);\r\n  border-radius: 15px;\r\n  padding: 2rem;\r\n  max-width: 500px;\r\n  width: 90%;\r\n  max-height: 80vh;\r\n  overflow-y: auto;\r\n  text-align: center;\r\n  box-shadow: 0 5px 25px rgba(0, 0, 0, 0.5);\r\n  border: 3px solid #42b983;\r\n  position: relative;\r\n  color: #a0aec0;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  font-size: 2rem;\r\n  color: #e74c3c;\r\n  cursor: pointer;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content img {\r\n  width: 200px;\r\n  border-radius: 10px;\r\n  border: 2px solid #42b983;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.modal-content h2 {\r\n  color: #42b983;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.modal-content h3 {\r\n  color: #ffd700;\r\n  margin: 15px 0;\r\n}\r\n\r\n.modal-content p {\r\n  margin-bottom: 8px;\r\n  text-align: left;\r\n}\r\n\r\n.modal-content strong {\r\n  color: #42b983;\r\n}\r\n\r\n.episodes-list {\r\n  list-style: none;\r\n  text-align: left;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  padding: 10px;\r\n  background-color: rgba(0, 0, 0, 0.2);\r\n  border-radius: 8px;\r\n}\r\n\r\n.episodes-list li {\r\n  padding: 8px;\r\n  border-bottom: 1px solid #42b983;\r\n  color: #a0aec0;\r\n}\r\n\r\n.episodes-list li:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.status-indicator {\r\n  display: inline-block;\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 50%;\r\n  margin-right: 5px;\r\n}\r\n\r\n.status-alive {\r\n  background-color: #42b983;\r\n}\r\n\r\n.status-dead {\r\n  background-color: #e74c3c;\r\n}\r\n\r\n.status-unknown {\r\n  background-color: #f39c12;\r\n}\r\n\r\n/* Responsive */\r\n@media (min-width: 1024px) {\r\n  .characters-container {\r\n    grid-template-columns: repeat(4, 1fr);\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .characters-container {\r\n    grid-template-columns: 1fr;\r\n  }\r\n  \r\n  .modal-content {\r\n    padding: 1rem;\r\n    margin: 1rem;\r\n  }\r\n  \r\n  .modal-content img {\r\n    width: 150px;\r\n  }\r\n}\r\n</style>"],"mappings":";;EAAAA,GAAA;EAGSC,KAAK,EAAC;;mBAHf;mBAAA;;EAsBWA,KAAK,EAAC;AAAe;mBAtBhC;;EAsCYA,KAAK,EAAC;AAAe;;uBArC/BC,mBAAA,CA4CM,cA3CJC,mBAAA,2BAA8B,E,CACWC,KAAA,CAAAC,SAAS,I,cAAlDH,mBAAA,CAeM,OAfNI,UAeM,I,kBAdJJ,mBAAA,CAaMK,SAAA,QAjBZC,WAAA,CAK4BJ,KAAA,CAAAK,UAAU,EAAvBC,SAAS;yBADlBR,mBAAA,CAaM;MAXHF,GAAG,EAAEU,SAAS,CAACC,EAAE;MAClBV,KAAK,EAAC,gBAAgB;MACrBW,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACL,SAAS;QAE5BM,mBAAA,CAAoD;MAA9CC,GAAG,EAAEP,SAAS,CAACQ,KAAK;MAAGC,GAAG,EAAET,SAAS,CAACU;4BAVpDC,UAAA,GAWQL,mBAAA,CAA6B,YAAAM,gBAAA,CAAtBZ,SAAS,CAACU,IAAI,kBACrBJ,mBAAA,CAGI,YAFFA,mBAAA,CAAkF;MAA3Ef,KAAK,EAbtBsB,eAAA,8BAaqDb,SAAS,CAACc,MAAM,CAACC,WAAW;6BAbjFC,gBAAA,CAa4F,GAClF,GAAAJ,gBAAA,CAAGZ,SAAS,CAACc,MAAM,IAAG,KAAG,GAAAF,gBAAA,CAAGZ,SAAS,CAACiB,OAAO,iB,GAE/CX,mBAAA,CAAsD,WAAnD,oBAAkB,GAAAM,gBAAA,CAAGZ,SAAS,CAACkB,QAAQ,CAACR,IAAI,iB,iBAhBvDS,UAAA;sCAAA1B,mBAAA,gBAoBIA,mBAAA,6CAAgD,EAChDa,mBAAA,CAuBM;IAvBDf,KAAK,EAAC,OAAO;IAAE6B,KAAK,EArB7BC,eAAA;MAAAC,OAAA,EAqB0C5B,KAAA,CAAAC,SAAS;IAAA;MAC7CW,mBAAA,CAqBM,OArBNiB,UAqBM,GApBJjB,mBAAA,CAAsD;IAAhDf,KAAK,EAAC,OAAO;IAAEW,OAAK,EAAAsB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,QAAA,CAAAsB,UAAA,IAAAtB,QAAA,CAAAsB,UAAA,IAAAD,IAAA,CAAU;KAAE,GAAO,GAE/CnB,mBAAA,CAAsE;IAAhEC,GAAG,EAAEb,KAAA,CAAAiC,iBAAiB,EAAEnB,KAAK;IAAGC,GAAG,EAAEf,KAAA,CAAAiC,iBAAiB,EAAEjB;0BAzBtEkB,UAAA,GA0BQtB,mBAAA,CAAsC,YAAAM,gBAAA,CAA/BlB,KAAA,CAAAiC,iBAAiB,EAAEjB,IAAI,kBAE9BJ,mBAAA,CAGI,YAFFA,mBAAA,CAA4F;IAArFf,KAAK,EA7BtBsB,eAAA,8BA6BqDnB,KAAA,CAAAiC,iBAAiB,EAAEb,MAAM,EAAEC,WAAW;2BA7B3FC,gBAAA,CA6BsG,GAC5F,GAAAJ,gBAAA,CAAGlB,KAAA,CAAAiC,iBAAiB,EAAEb,MAAM,IAAG,KAAG,GAAAF,gBAAA,CAAGlB,KAAA,CAAAiC,iBAAiB,EAAEV,OAAO,iB,GAGjEX,mBAAA,CAA+D,Y,0BAA5DA,mBAAA,CAAwB,gBAAhB,SAAO,sBAjC1BU,gBAAA,CAiCmC,GAAC,GAAAJ,gBAAA,CAAGlB,KAAA,CAAAiC,iBAAiB,EAAEE,MAAM,iB,GACxDvB,mBAAA,CAAqE,Y,0BAAlEA,mBAAA,CAAwB,gBAAhB,SAAO,sBAlC1BU,gBAAA,CAkCmC,GAAC,GAAAJ,gBAAA,CAAGlB,KAAA,CAAAiC,iBAAiB,EAAEG,MAAM,EAAEpB,IAAI,iB,GAC9DJ,mBAAA,CAAiF,Y,0BAA9EA,mBAAA,CAAkC,gBAA1B,mBAAiB,sBAnCpCU,gBAAA,CAmC6C,GAAC,GAAAJ,gBAAA,CAAGlB,KAAA,CAAAiC,iBAAiB,EAAET,QAAQ,EAAER,IAAI,iB,6BAE1EJ,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAIK,MAJLyB,UAIK,I,kBAHHvC,mBAAA,CAEKK,SAAA,QAzCfC,WAAA,CAuCoCJ,KAAA,CAAAsC,QAAQ,EAvC5C,CAuCsBC,EAAE,EAAEC,KAAK;yBAArB1C,mBAAA,CAEK;MAFgCF,GAAG,EAAE4C;IAAK,GAAAtB,gBAAA,CAC1CqB,EAAE,CAACE,OAAO,IAAG,KAAG,GAAAvB,gBAAA,CAAGqB,EAAE,CAACvB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}