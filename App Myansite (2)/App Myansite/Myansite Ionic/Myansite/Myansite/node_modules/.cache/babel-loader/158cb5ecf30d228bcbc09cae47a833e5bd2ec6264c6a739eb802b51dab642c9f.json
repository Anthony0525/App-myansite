{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"anime-view\"\n};\nconst _hoisted_2 = {\n  id: \"charactersContainer\",\n  class: \"characters-container\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = {\n  class: \"modal-content\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  id: \"modalTitle\"\n};\nconst _hoisted_8 = {\n  id: \"modalSynopsis\"\n};\nconst _hoisted_9 = {\n  id: \"modalType\"\n};\nconst _hoisted_10 = {\n  id: \"modalEpisodes\"\n};\nconst _hoisted_11 = {\n  id: \"modalYear\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Contenedor de cards \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.animes, anime => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: anime.id,\n      class: \"character-card\",\n      onClick: $event => $setup.showDetail(anime)\n    }, [_createElementVNode(\"img\", {\n      src: anime.images?.jpg?.image_url || '',\n      alt: anime.title\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"h3\", null, _toDisplayString(anime.title), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Modal para detalle de anime \"), _createElementVNode(\"div\", {\n    id: \"animeModal\",\n    class: \"modal\",\n    style: _normalizeStyle({\n      display: $setup.showModal ? 'flex' : 'none'\n    })\n  }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: $setup.closeModal\n  }, \"Ã—\"), _createElementVNode(\"img\", {\n    id: \"modalImg\",\n    src: $setup.selectedAnimeImage,\n    alt: \"Anime\"\n  }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"h2\", _hoisted_7, _toDisplayString($setup.selectedAnime?.title), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_8, _toDisplayString($setup.selectedAnime?.synopsis || 'Sinopsis no disponible.'), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"strong\", null, \"Tipo:\", -1 /* HOISTED */)), _cache[1] || (_cache[1] = _createTextVNode()), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.selectedAnime?.type), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Episodios:\", -1 /* HOISTED */)), _cache[3] || (_cache[3] = _createTextVNode()), _createElementVNode(\"span\", _hoisted_10, _toDisplayString($setup.selectedAnime?.episodes || 'Desconocido'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"AÃ±o:\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createTextVNode()), _createElementVNode(\"span\", _hoisted_11, _toDisplayString($setup.selectedAnime?.year || 'N/A'), 1 /* TEXT */)])])], 4 /* STYLE */)]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","animes","anime","key","onClick","$event","showDetail","src","images","jpg","image_url","alt","title","_hoisted_4","_toDisplayString","_hoisted_3","style","_normalizeStyle","display","showModal","_hoisted_5","closeModal","selectedAnimeImage","_hoisted_6","_hoisted_7","selectedAnime","_hoisted_8","synopsis","_createTextVNode","_hoisted_9","type","_hoisted_10","episodes","_hoisted_11","year"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\AnimeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"anime-view\">\r\n    <!-- Contenedor de cards -->\r\n    <div id=\"charactersContainer\" class=\"characters-container\">\r\n      <div \r\n        v-for=\"anime in animes\" \r\n        :key=\"anime.id\" \r\n        class=\"character-card\"\r\n        @click=\"showDetail(anime)\"\r\n      >\r\n        <img :src=\"anime.images?.jpg?.image_url || ''\" :alt=\"anime.title\" />\r\n        <h3>{{ anime.title }}</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para detalle de anime -->\r\n    <div id=\"animeModal\" class=\"modal\" :style=\"{ display: showModal ? 'flex' : 'none' }\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <img id=\"modalImg\" :src=\"selectedAnimeImage\" alt=\"Anime\" />\r\n        <h2 id=\"modalTitle\">{{ selectedAnime?.title }}</h2>\r\n        <p id=\"modalSynopsis\">{{ selectedAnime?.synopsis || 'Sinopsis no disponible.' }}</p>\r\n        <p><strong>Tipo:</strong> <span id=\"modalType\">{{ selectedAnime?.type }}</span></p>\r\n        <p><strong>Episodios:</strong> <span id=\"modalEpisodes\">{{ selectedAnime?.episodes || 'Desconocido' }}</span></p>\r\n        <p><strong>AÃ±o:</strong> <span id=\"modalYear\">{{ selectedAnime?.year || 'N/A' }}</span></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from \"vue\";\r\nimport axios from \"axios\";\r\nimport \"./AnimeView.css\"; // Importamos los estilos externos\r\n\r\nconst animes = ref([]);\r\nconst showModal = ref(false);\r\nconst selectedAnime = ref(null);\r\n\r\nconst selectedAnimeImage = computed(() => {\r\n  if (!selectedAnime.value) return \"\";\r\n  return (\r\n    selectedAnime.value.images?.jpg?.large_image_url ||\r\n    selectedAnime.value.images?.jpg?.image_url ||\r\n    \"\"\r\n  );\r\n});\r\n\r\nconst loadAnimes = async () => {\r\n  try {\r\n    // ðŸ”¹ AquÃ­ puedes usar una API real (ej: Jikan API de MyAnimeList)\r\n    const { data } = await axios.get(\"https://api.jikan.moe/v4/top/anime\");\r\n    animes.value = data.data; // La API devuelve los animes en `data.data`\r\n  } catch (err) {\r\n    console.error(\"Error cargando animes:\", err);\r\n  }\r\n};\r\n\r\nconst showDetail = (anime) => {\r\n  selectedAnime.value = anime;\r\n  showModal.value = true;\r\n};\r\n\r\nconst closeModal = () => {\r\n  showModal.value = false;\r\n  selectedAnime.value = null;\r\n};\r\n\r\nconst handleClickOutside = (event) => {\r\n  if (event.target === document.getElementById(\"animeModal\")) {\r\n    closeModal();\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  loadAnimes();\r\n  window.addEventListener(\"click\", handleClickOutside);\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener(\"click\", handleClickOutside);\r\n});\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EAEhBC,EAAE,EAAC,qBAAqB;EAACD,KAAK,EAAC;;mBAHxC;mBAAA;;EAiBWA,KAAK,EAAC;AAAe;mBAjBhC;;EAoBYC,EAAE,EAAC;AAAY;;EAChBA,EAAE,EAAC;AAAe;;EACWA,EAAE,EAAC;AAAW;;EACTA,EAAE,EAAC;AAAe;;EACxBA,EAAE,EAAC;AAAW;;uBAvBnDC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,yBAA4B,EAC5BC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJJ,mBAAA,CAQMK,SAAA,QAZZC,WAAA,CAKwBC,MAAA,CAAAC,MAAM,EAAfC,KAAK;yBADdT,mBAAA,CAQM;MANHU,GAAG,EAAED,KAAK,CAACV,EAAE;MACdD,KAAK,EAAC,gBAAgB;MACrBa,OAAK,EAAAC,MAAA,IAAEL,MAAA,CAAAM,UAAU,CAACJ,KAAK;QAExBN,mBAAA,CAAoE;MAA9DW,GAAG,EAAEL,KAAK,CAACM,MAAM,EAAEC,GAAG,EAAEC,SAAS;MAASC,GAAG,EAAET,KAAK,CAACU;4BAVnEC,UAAA,GAWQjB,mBAAA,CAA0B,YAAAkB,gBAAA,CAAnBZ,KAAK,CAACU,KAAK,iB,iBAX1BG,UAAA;oCAeIpB,mBAAA,iCAAoC,EACpCC,mBAAA,CAUM;IAVDJ,EAAE,EAAC,YAAY;IAACD,KAAK,EAAC,OAAO;IAAEyB,KAAK,EAhB7CC,eAAA;MAAAC,OAAA,EAgB0DlB,MAAA,CAAAmB,SAAS;IAAA;MAC7DvB,mBAAA,CAQM,OARNwB,UAQM,GAPJxB,mBAAA,CAAsD;IAAhDL,KAAK,EAAC,OAAO;IAAEa,OAAK,EAAEJ,MAAA,CAAAqB;KAAY,GAAO,GAC/CzB,mBAAA,CAA2D;IAAtDJ,EAAE,EAAC,UAAU;IAAEe,GAAG,EAAEP,MAAA,CAAAsB,kBAAkB;IAAEX,GAAG,EAAC;0BAnBzDY,UAAA,GAoBQ3B,mBAAA,CAAmD,MAAnD4B,UAAmD,EAAAV,gBAAA,CAA5Bd,MAAA,CAAAyB,aAAa,EAAEb,KAAK,kBAC3ChB,mBAAA,CAAoF,KAApF8B,UAAoF,EAAAZ,gBAAA,CAA3Dd,MAAA,CAAAyB,aAAa,EAAEE,QAAQ,+CAChD/B,mBAAA,CAAmF,Y,0BAAhFA,mBAAA,CAAsB,gBAAd,OAAK,sB,0BAtBxBgC,gBAAA,KAsBkChC,mBAAA,CAAqD,QAArDiC,UAAqD,EAAAf,gBAAA,CAA7Bd,MAAA,CAAAyB,aAAa,EAAEK,IAAI,iB,GACrElC,mBAAA,CAAiH,Y,0BAA9GA,mBAAA,CAA2B,gBAAnB,YAAU,sB,0BAvB7BgC,gBAAA,KAuBuChC,mBAAA,CAA8E,QAA9EmC,WAA8E,EAAAjB,gBAAA,CAAlDd,MAAA,CAAAyB,aAAa,EAAEO,QAAQ,kC,GAClFpC,mBAAA,CAA2F,Y,0BAAxFA,mBAAA,CAAqB,gBAAb,MAAI,sB,0BAxBvBgC,gBAAA,KAwBiChC,mBAAA,CAA8D,QAA9DqC,WAA8D,EAAAnB,gBAAA,CAAtCd,MAAA,CAAAyB,aAAa,EAAES,IAAI,0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}