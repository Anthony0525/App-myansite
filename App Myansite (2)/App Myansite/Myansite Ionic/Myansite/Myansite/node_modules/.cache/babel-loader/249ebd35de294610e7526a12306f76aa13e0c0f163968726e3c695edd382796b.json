{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Listado de personajes \"), _cache[0] || (_cache[0] = _createElementVNode(\"div\", {\n    id: \"charactersContainer\",\n    class: \"characters-grid\"\n  }, null, -1 /* HOISTED */)), _createCommentVNode(\" Vista detalle (oculta al inicio) \"), _cache[1] || (_cache[1] = _createElementVNode(\"div\", {\n    id: \"detailView\",\n    style: {\n      \"display\": \"none\"\n    }\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["_createElementBlock","_createCommentVNode","_createElementVNode","id","class","style"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\RickAndMorty.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Listado de personajes -->\r\n    <div id=\"charactersContainer\" class=\"characters-grid\"></div>\r\n\r\n    <!-- Vista detalle (oculta al inicio) -->\r\n    <div id=\"detailView\" style=\"display:none;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"RickAndMorty\",\r\n  mounted() {\r\n    // cuando el componente se monta, llamamos tu JS\r\n    this.getFilesFromApi();\r\n  },\r\n  methods: {\r\n    async getFilesFromApi() {\r\n      const apiUrl = \"https://rickandmortyapi.com/api/character\";\r\n      try {\r\n        const response = await fetch(apiUrl);\r\n        const data = await response.json();\r\n        this.createCharacterCards(data.results);\r\n      } catch (err) {\r\n        console.error(\"Error al traer API:\", err);\r\n      }\r\n    },\r\n    createCharacterCards(characters) {\r\n      const charactersContainer = document.getElementById(\"charactersContainer\");\r\n      charactersContainer.innerHTML = \"\";\r\n      characters.forEach((character) => {\r\n        const card = document.createElement(\"div\");\r\n        card.classList.add(\"character-card\");\r\n\r\n        const imageElement = document.createElement(\"img\");\r\n        imageElement.src = character.image;\r\n\r\n        const nameElement = document.createElement(\"h1\");\r\n        nameElement.textContent = character.name;\r\n\r\n        const speciesElement = document.createElement(\"p\");\r\n        speciesElement.textContent = character.species;\r\n\r\n        const statusElement = document.createElement(\"p\");\r\n        statusElement.textContent = character.status;\r\n\r\n        const lastknownElement = document.createElement(\"p\");\r\n        lastknownElement.textContent = character.location.name;\r\n\r\n        card.appendChild(imageElement);\r\n        card.appendChild(nameElement);\r\n        card.appendChild(speciesElement);\r\n        card.appendChild(statusElement);\r\n        card.appendChild(lastknownElement);\r\n\r\n        // evento click -> vista detalle\r\n        card.addEventListener(\"click\", () => {\r\n          this.showDetailView(character.id);\r\n        });\r\n\r\n        charactersContainer.appendChild(card);\r\n      });\r\n    },\r\n    async showDetailView(characterId) {\r\n      document.getElementById(\"charactersContainer\").style.display = \"none\";\r\n\r\n      const detailView = document.getElementById(\"detailView\");\r\n      detailView.style.display = \"block\";\r\n\r\n      const character = await fetch(`https://rickandmortyapi.com/api/character/${characterId}`).then(r => r.json());\r\n\r\n      detailView.innerHTML = `\r\n        <button id=\"backBtn\">Volver</button>\r\n        <h1 id=\"characterName\">${character.name}</h1>\r\n        <img id=\"characterImage\" src=\"${character.image}\" alt=\"Personaje\"/>\r\n        <h2>Episodios:</h2>\r\n        <ul id=\"episodesList\"></ul>\r\n      `;\r\n\r\n      const episodesList = document.getElementById(\"episodesList\");\r\n      const episodes = await Promise.all(character.episode.map(url => fetch(url).then(r => r.json())));\r\n      episodes.forEach(ep => {\r\n        const li = document.createElement(\"li\");\r\n        li.textContent = `${ep.episode} - ${ep.name}`;\r\n        episodesList.appendChild(li);\r\n      });\r\n\r\n      // botÃ³n volver\r\n      document.getElementById(\"backBtn\").onclick = () => {\r\n        detailView.style.display = \"none\";\r\n        detailView.innerHTML = \"\";\r\n        document.getElementById(\"charactersContainer\").style.display = \"grid\";\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.characters-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1rem;\r\n}\r\n.character-card {\r\n  border: 1px solid #ccc;\r\n  padding: 1rem;\r\n  border-radius: 12px;\r\n  text-align: center;\r\n}\r\n.character-card img {\r\n  width: 100%;\r\n  border-radius: 12px;\r\n}\r\n</style>\r\n"],"mappings":";;uBACEA,mBAAA,CAMM,cALJC,mBAAA,2BAA8B,E,0BAC9BC,mBAAA,CAA4D;IAAvDC,EAAE,EAAC,qBAAqB;IAACC,KAAK,EAAC;+BAEpCH,mBAAA,sCAAyC,E,0BACzCC,mBAAA,CAAiD;IAA5CC,EAAE,EAAC,YAAY;IAACE,KAAqB,EAArB;MAAA;IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}