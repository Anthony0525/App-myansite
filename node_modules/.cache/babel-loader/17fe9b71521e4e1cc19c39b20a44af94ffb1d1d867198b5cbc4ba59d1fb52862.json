{"ast":null,"code":"import { openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(\"div\", null, [$setup.loadingState === 'loading' ? (_openBlock(), _createBlock($setup[\"LoadingScreen\"], {\n    key: 0\n  })) : (_openBlock(), _createBlock(_component_router_view, {\n    key: 1\n  }))]);\n}","map":{"version":3,"names":["_createElementBlock","$setup","loadingState","_createBlock","key","_component_router_view"],"sources":["C:\\Users\\ellen\\Downloads\\App en Vue\\Myansite\\Myansite\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <LoadingScreen v-if=\"loadingState === 'loading'\" />\n    \n    <router-view v-else />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport LoadingScreen from './views/PantallaCarga.vue';\nimport { useRouter } from 'vue-router';\n\nconst loadingState = ref('loading');\nconst router = useRouter();\n\nonMounted(() => {\n  // Simula el tiempo de carga inicial y luego cambia el estado\n  setTimeout(() => {\n    loadingState.value = 'loaded';\n  }, 1000); // Ajusta este tiempo según tus necesidades\n  \n  // Opcional: Escucha el evento de cambio de ruta para mostrar la carga en cada navegación\n  router.beforeEach((to, from, next) => {\n    loadingState.value = 'loading';\n    next();\n  });\n  \n  router.afterEach(() => {\n    // Cuando la ruta se ha cargado, oculta la pantalla de carga\n    setTimeout(() => {\n      loadingState.value = 'loaded';\n    }, 4000); // Un pequeño retraso para una transición suave\n  });\n});\n</script>"],"mappings":";;;uBACEA,mBAAA,CAIM,cAHiBC,MAAA,CAAAC,YAAY,kB,cAAjCC,YAAA,CAAmDF,MAAA;IAFvDG,GAAA;EAAA,O,cAIID,YAAA,CAAsBE,sBAAA;IAJ1BD,GAAA;EAAA,I","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}