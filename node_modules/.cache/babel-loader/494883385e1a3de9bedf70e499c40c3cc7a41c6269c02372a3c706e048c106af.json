{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"anime-view\"\n};\nconst _hoisted_2 = {\n  id: \"charactersContainer\",\n  class: \"characters-container\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = {\n  class: \"modal-content\"\n};\nconst _hoisted_6 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Contenedor de cards \"), _createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.animes, anime => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: anime.id,\n      class: \"character-card\",\n      onClick: $event => $options.showDetail(anime)\n    }, [_createElementVNode(\"img\", {\n      src: anime.images?.jpg?.image_url || '',\n      alt: anime.title\n    }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"h3\", null, _toDisplayString(anime.title), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Modal para detalle de anime \"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"modal\",\n    onClick: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.closeModal && $options.closeModal(...args), [\"self\"]))\n  }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"Ã—\"), _createElementVNode(\"img\", {\n    src: $options.selectedAnimeImage,\n    alt: \"Anime\"\n  }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"h2\", null, _toDisplayString($data.selectedAnime?.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($data.selectedAnime?.synopsis || 'Sinopsis no disponible.'), 1 /* TEXT */), _createElementVNode(\"p\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"strong\", null, \"Tipo:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedAnime?.type), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"strong\", null, \"Episodios:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedAnime?.episodes || 'Desconocido'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"strong\", null, \"AÃ±o:\", -1 /* HOISTED */)), _createTextVNode(\" \" + _toDisplayString($data.selectedAnime?.year || 'N/A'), 1 /* TEXT */)])])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","animes","anime","key","onClick","$event","$options","showDetail","src","images","jpg","image_url","alt","title","_hoisted_4","_toDisplayString","_hoisted_3","showModal","_cache","_withModifiers","args","closeModal","_hoisted_5","selectedAnimeImage","_hoisted_6","selectedAnime","synopsis","_createTextVNode","type","episodes","year"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\AnimeView.vue"],"sourcesContent":["<template>\r\n  <div class=\"anime-view\">\r\n    <!-- Contenedor de cards -->\r\n    <div id=\"charactersContainer\" class=\"characters-container\">\r\n      <div \r\n        v-for=\"anime in animes\" \r\n        :key=\"anime.id\" \r\n        class=\"character-card\"\r\n        @click=\"showDetail(anime)\"\r\n      >\r\n        <img :src=\"anime.images?.jpg?.image_url || ''\" :alt=\"anime.title\" />\r\n        <h3>{{ anime.title }}</h3>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Modal para detalle de anime -->\r\n    <div v-if=\"showModal\" class=\"modal\" @click.self=\"closeModal\">\r\n      <div class=\"modal-content\">\r\n        <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n        <img :src=\"selectedAnimeImage\" alt=\"Anime\" />\r\n        <h2>{{ selectedAnime?.title }}</h2>\r\n        <p>{{ selectedAnime?.synopsis || 'Sinopsis no disponible.' }}</p>\r\n        <p><strong>Tipo:</strong> {{ selectedAnime?.type }}</p>\r\n        <p><strong>Episodios:</strong> {{ selectedAnime?.episodes || 'Desconocido' }}</p>\r\n        <p><strong>AÃ±o:</strong> {{ selectedAnime?.year || 'N/A' }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport '@/assets/anime.css'\r\n\r\nexport default {\r\n  name: 'AnimeView',\r\n  data() {\r\n    return {\r\n      animes: [],\r\n      showModal: false,\r\n      selectedAnime: null\r\n    }\r\n  },\r\n  computed: {\r\n    selectedAnimeImage() {\r\n      if (!this.selectedAnime) return '';\r\n      return this.selectedAnime.images?.jpg?.large_image_url || \r\n             this.selectedAnime.images?.jpg?.image_url || '';\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadAnimes();\r\n  },\r\n  methods: {\r\n    async loadAnimes() {\r\n      try {\r\n        // ðŸ”¹ AquÃ­ tienes todos los animes que pusiste\r\n        this.animes = await import('@/assets/animes.json').then(m => m.default)\r\n      } catch (err) {\r\n        console.error(\"Error cargando animes:\", err);\r\n      }\r\n    },\r\n    showDetail(anime) {\r\n      this.selectedAnime = anime;\r\n      this.showModal = true;\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n      this.selectedAnime = null;\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EAEhBC,EAAE,EAAC,qBAAqB;EAACD,KAAK,EAAC;;mBAHxC;mBAAA;;EAiBWA,KAAK,EAAC;AAAe;mBAjBhC;;uBACEE,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJC,mBAAA,yBAA4B,EAC5BC,mBAAA,CAUM,OAVNC,UAUM,I,kBATJJ,mBAAA,CAQMK,SAAA,QAZZC,WAAA,CAKwBC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBADdT,mBAAA,CAQM;MANHU,GAAG,EAAED,KAAK,CAACV,EAAE;MACdD,KAAK,EAAC,gBAAgB;MACrBa,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACL,KAAK;QAExBN,mBAAA,CAAoE;MAA9DY,GAAG,EAAEN,KAAK,CAACO,MAAM,EAAEC,GAAG,EAAEC,SAAS;MAASC,GAAG,EAAEV,KAAK,CAACW;4BAVnEC,UAAA,GAWQlB,mBAAA,CAA0B,YAAAmB,gBAAA,CAAnBb,KAAK,CAACW,KAAK,iB,iBAX1BG,UAAA;oCAeIrB,mBAAA,iCAAoC,EACzBK,KAAA,CAAAiB,SAAS,I,cAApBxB,mBAAA,CAUM;IA1BVU,GAAA;IAgB0BZ,KAAK,EAAC,OAAO;IAAEa,OAAK,EAAAc,MAAA,QAAAA,MAAA,MAhB9CC,cAAA,KAAAC,IAAA,KAgBqDd,QAAA,CAAAe,UAAA,IAAAf,QAAA,CAAAe,UAAA,IAAAD,IAAA,CAAU;MACzDxB,mBAAA,CAQM,OARN0B,UAQM,GAPJ1B,mBAAA,CAAsD;IAAhDL,KAAK,EAAC,OAAO;IAAEa,OAAK,EAAAc,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEd,QAAA,CAAAe,UAAA,IAAAf,QAAA,CAAAe,UAAA,IAAAD,IAAA,CAAU;KAAE,GAAO,GAC/CxB,mBAAA,CAA6C;IAAvCY,GAAG,EAAEF,QAAA,CAAAiB,kBAAkB;IAAEX,GAAG,EAAC;0BAnB3CY,UAAA,GAoBQ5B,mBAAA,CAAmC,YAAAmB,gBAAA,CAA5Bf,KAAA,CAAAyB,aAAa,EAAEZ,KAAK,kBAC3BjB,mBAAA,CAAiE,WAAAmB,gBAAA,CAA3Df,KAAA,CAAAyB,aAAa,EAAEC,QAAQ,+CAC7B9B,mBAAA,CAAuD,Y,0BAApDA,mBAAA,CAAsB,gBAAd,OAAK,sBAtBxB+B,gBAAA,CAsBiC,GAAC,GAAAZ,gBAAA,CAAGf,KAAA,CAAAyB,aAAa,EAAEG,IAAI,iB,GAChDhC,mBAAA,CAAiF,Y,0BAA9EA,mBAAA,CAA2B,gBAAnB,YAAU,sBAvB7B+B,gBAAA,CAuBsC,GAAC,GAAAZ,gBAAA,CAAGf,KAAA,CAAAyB,aAAa,EAAEI,QAAQ,kC,GACzDjC,mBAAA,CAA+D,Y,0BAA5DA,mBAAA,CAAqB,gBAAb,MAAI,sBAxBvB+B,gBAAA,CAwBgC,GAAC,GAAAZ,gBAAA,CAAGf,KAAA,CAAAyB,aAAa,EAAEK,IAAI,0B,SAxBvDnC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}