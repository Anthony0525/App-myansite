{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nimport CharacterCard from '../components/CharacterCard.vue';\nexport default {\n  name: 'RickAndMorty',\n  components: {\n    CharacterCard\n  },\n  data() {\n    return {\n      characters: [],\n      selectedCharacter: null,\n      episodes: []\n    };\n  },\n  mounted() {\n    this.getCharacters();\n  },\n  methods: {\n    async getCharacters() {\n      try {\n        const response = await axios.get('https://rickandmortyapi.com/api/character');\n        this.characters = response.data.results;\n      } catch (error) {\n        console.error('Error al obtener personajes:', error);\n      }\n    },\n    async showDetail(character) {\n      this.selectedCharacter = character;\n      try {\n        // Limitar a 5 episodios para mejor rendimiento\n        const episodeRequests = character.episode.slice(0, 5).map(url => axios.get(url));\n        const responses = await Promise.all(episodeRequests);\n        this.episodes = responses.map(response => response.data);\n      } catch (error) {\n        console.error('Error al obtener episodios:', error);\n      }\n    },\n    goBack() {\n      this.selectedCharacter = null;\n      this.episodes = [];\n    }\n  }\n};","map":{"version":3,"names":["axios","CharacterCard","name","components","data","characters","selectedCharacter","episodes","mounted","getCharacters","methods","response","get","results","error","console","showDetail","character","episodeRequests","episode","slice","map","url","responses","Promise","all","goBack"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\RickAndMorty.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Vista de listado de personajes -->\r\n    <div id=\"charactersContainer\" class=\"characters-container\" v-if=\"!selectedCharacter\">\r\n      <CharacterCard \r\n        v-for=\"character in characters\" \r\n        :key=\"character.id\" \r\n        :character=\"character\"\r\n        @click=\"showDetail(character)\"\r\n      />\r\n    </div>\r\n    \r\n    <!-- Vista de detalle -->\r\n    <div id=\"detailView\" v-if=\"selectedCharacter\">\r\n      <button id=\"backBtn\" @click=\"goBack\">Volver</button>\r\n      <h1>{{ selectedCharacter.name }}</h1>\r\n      <img :src=\"selectedCharacter.image\" :alt=\"selectedCharacter.name\" />\r\n      <p>\r\n        <span :class=\"'status-indicator status-' + selectedCharacter.status.toLowerCase()\"></span>\r\n        {{ selectedCharacter.status }} - {{ selectedCharacter.species }}\r\n      </p>\r\n      <p>Género: {{ selectedCharacter.gender }}</p>\r\n      <p>Origen: {{ selectedCharacter.origin.name }}</p>\r\n      <p>Última ubicación: {{ selectedCharacter.location.name }}</p>\r\n      \r\n      <h2>Episodios:</h2>\r\n      <ul>\r\n        <li v-for=\"(ep, index) in episodes\" :key=\"index\">\r\n          {{ ep.episode }} - {{ ep.name }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport CharacterCard from '../components/CharacterCard.vue'\r\n\r\nexport default {\r\n  name: 'RickAndMorty',\r\n  components: {\r\n    CharacterCard\r\n  },\r\n  data() {\r\n    return {\r\n      characters: [],\r\n      selectedCharacter: null,\r\n      episodes: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getCharacters()\r\n  },\r\n  methods: {\r\n    async getCharacters() {\r\n      try {\r\n        const response = await axios.get('https://rickandmortyapi.com/api/character')\r\n        this.characters = response.data.results\r\n      } catch (error) {\r\n        console.error('Error al obtener personajes:', error)\r\n      }\r\n    },\r\n    async showDetail(character) {\r\n      this.selectedCharacter = character\r\n      try {\r\n        // Limitar a 5 episodios para mejor rendimiento\r\n        const episodeRequests = character.episode.slice(0, 5).map(url => axios.get(url))\r\n        const responses = await Promise.all(episodeRequests)\r\n        this.episodes = responses.map(response => response.data)\r\n      } catch (error) {\r\n        console.error('Error al obtener episodios:', error)\r\n      }\r\n    },\r\n    goBack() {\r\n      this.selectedCharacter = null\r\n      this.episodes = []\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos específicos de esta vista si son necesarios */\r\n</style>"],"mappings":";;AAoCA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,aAAY,MAAO,iCAAgC;AAE1D,eAAe;EACbC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,iBAAiB,EAAE,IAAI;MACvBC,QAAQ,EAAE;IACZ;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC;EACrB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,2CAA2C;QAC5E,IAAI,CAACP,UAAS,GAAIM,QAAQ,CAACP,IAAI,CAACS,OAAM;MACxC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK;MACrD;IACF,CAAC;IACD,MAAME,UAAUA,CAACC,SAAS,EAAE;MAC1B,IAAI,CAACX,iBAAgB,GAAIW,SAAQ;MACjC,IAAI;QACF;QACA,MAAMC,eAAc,GAAID,SAAS,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAACC,GAAE,IAAKtB,KAAK,CAACY,GAAG,CAACU,GAAG,CAAC;QAC/E,MAAMC,SAAQ,GAAI,MAAMC,OAAO,CAACC,GAAG,CAACP,eAAe;QACnD,IAAI,CAACX,QAAO,GAAIgB,SAAS,CAACF,GAAG,CAACV,QAAO,IAAKA,QAAQ,CAACP,IAAI;MACzD,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK;MACpD;IACF,CAAC;IACDY,MAAMA,CAAA,EAAG;MACP,IAAI,CAACpB,iBAAgB,GAAI,IAAG;MAC5B,IAAI,CAACC,QAAO,GAAI,EAAC;IACnB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}