{"ast":null,"code":"import { ref, onMounted } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { IonApp } from \"@ionic/vue\";\nimport LoadingScreen from \"./views/PantallaCarga.vue\";\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loadingState = ref(\"loading\");\n    const router = useRouter();\n    onMounted(() => {\n      // Tiempo inicial de carga al abrir la app\n      setTimeout(() => {\n        loadingState.value = \"loaded\";\n      }, 3000); // puedes ajustar a tu gusto\n\n      // Mostrar loading en cada navegación\n      router.beforeEach((to, from, next) => {\n        loadingState.value = \"loading\";\n        next();\n      });\n      router.afterEach(() => {\n        setTimeout(() => {\n          loadingState.value = \"loaded\";\n        }, 500); // un pequeño delay para suavizar transición\n      });\n    });\n    const __returned__ = {\n      loadingState,\n      router,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get IonApp() {\n        return IonApp;\n      },\n      LoadingScreen\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","IonApp","LoadingScreen","loadingState","router","setTimeout","value","beforeEach","to","from","next","afterEach"],"sources":["C:/Users/ellen/Downloads/App Myansite/Myansite Ionic/Myansite/Myansite/src/App.vue"],"sourcesContent":["<template>\n  <IonApp>\n    <!-- Loading global -->\n    <LoadingScreen v-if=\"loadingState === 'loading'\" />\n\n    <!-- Contenido principal con rutas -->\n    <router-view v-else /> <!-- Solo router-view normal -->\n  </IonApp>\n</template>\n\n<script setup>\nimport { ref, onMounted } from \"vue\"\nimport { useRouter } from \"vue-router\"\nimport { IonApp } from \"@ionic/vue\"\nimport LoadingScreen from \"./views/PantallaCarga.vue\"\n\nconst loadingState = ref(\"loading\")\nconst router = useRouter()\n\nonMounted(() => {\n  // Tiempo inicial de carga al abrir la app\n  setTimeout(() => {\n    loadingState.value = \"loaded\"\n  }, 3000) // puedes ajustar a tu gusto\n\n  // Mostrar loading en cada navegación\n  router.beforeEach((to, from, next) => {\n    loadingState.value = \"loading\"\n    next()\n  })\n\n  router.afterEach(() => {\n    setTimeout(() => {\n      loadingState.value = \"loaded\"\n    }, 500) // un pequeño delay para suavizar transición\n  })\n})\n</script>\n"],"mappings":"AAWA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,SAASC,SAAS,QAAQ,YAAW;AACrC,SAASC,MAAM,QAAQ,YAAW;AAClC,OAAOC,aAAa,MAAM,2BAA0B;;;;;;;IAEpD,MAAMC,YAAY,GAAGL,GAAG,CAAC,SAAS;IAClC,MAAMM,MAAM,GAAGJ,SAAS,CAAC;IAEzBD,SAAS,CAAC,MAAM;MACd;MACAM,UAAU,CAAC,MAAM;QACfF,YAAY,CAACG,KAAK,GAAG,QAAO;MAC9B,CAAC,EAAE,IAAI,CAAC,EAAC;;MAET;MACAF,MAAM,CAACG,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;QACpCP,YAAY,CAACG,KAAK,GAAG,SAAQ;QAC7BI,IAAI,CAAC;MACP,CAAC;MAEDN,MAAM,CAACO,SAAS,CAAC,MAAM;QACrBN,UAAU,CAAC,MAAM;UACfF,YAAY,CAACG,KAAK,GAAG,QAAO;QAC9B,CAAC,EAAE,GAAG,CAAC,EAAC;MACV,CAAC;IACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}