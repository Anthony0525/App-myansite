{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createBlock as _createBlock, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  class: \"chat-messages\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock($setup[\"IonPage\"], {\n    class: \"chat-page\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\" Header con Segment \"), _createVNode($setup[\"IonHeader\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"IonToolbar\"], null, {\n        default: _withCtx(() => [_createVNode($setup[\"IonSegment\"], {\n          modelValue: $setup.selectedSegment,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.selectedSegment = $event)\n        }, {\n          default: _withCtx(() => [_createVNode($setup[\"IonSegmentButton\"], {\n            value: \"comunes\"\n          }, {\n            default: _withCtx(() => [_createVNode($setup[\"IonLabel\"], null, {\n              default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"Comunes\")])),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          }), _createVNode($setup[\"IonSegmentButton\"], {\n            value: \"importantes\"\n          }, {\n            default: _withCtx(() => [_createVNode($setup[\"IonLabel\"], null, {\n              default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"Importantes\")])),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" Lista de chats \"), _createVNode($setup[\"IonContent\"], {\n      class: \"ion-padding chat-content\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"IonList\"], null, {\n        default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredChats, chat => {\n          return _openBlock(), _createBlock($setup[\"IonCard\"], {\n            key: chat.id,\n            onClick: $event => $setup.openChat(chat),\n            class: \"chat-card\"\n          }, {\n            default: _withCtx(() => [_createVNode($setup[\"IonItem\"], {\n              lines: \"none\"\n            }, {\n              start: _withCtx(() => [_createVNode($setup[\"IonAvatar\"], null, {\n                default: _withCtx(() => [_createElementVNode(\"img\", {\n                  src: chat.user_avatar,\n                  alt: \"avatar\"\n                }, null, 8 /* PROPS */, _hoisted_1)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              default: _withCtx(() => [_createVNode($setup[\"IonLabel\"], null, {\n                default: _withCtx(() => [_createElementVNode(\"h2\", null, _toDisplayString(chat.username), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(chat.last_message), 1 /* TEXT */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]);\n        }), 128 /* KEYED_FRAGMENT */))]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" Modal de chat \"), _createVNode($setup[\"IonModal\"], {\n      \"is-open\": $setup.selectedChat !== null,\n      onDidDismiss: $setup.closeChat\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"IonHeader\"], null, {\n        default: _withCtx(() => [_createVNode($setup[\"IonToolbar\"], null, {\n          start: _withCtx(() => [_createVNode($setup[\"IonButtons\"], null, {\n            default: _withCtx(() => [_createVNode($setup[\"IonButton\"], {\n              onClick: $setup.closeChat\n            }, {\n              default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"Cerrar\")])),\n              _: 1 /* STABLE */\n            })]),\n            _: 1 /* STABLE */\n          })]),\n          default: _withCtx(() => [$setup.selectedChat ? (_openBlock(), _createBlock($setup[\"IonTitle\"], {\n            key: 0\n          }, {\n            default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.selectedChat.username), 1 /* TEXT */)]),\n            _: 1 /* STABLE */\n          })) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode($setup[\"IonContent\"], {\n        class: \"chat-modal\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, msg => {\n          return _openBlock(), _createElementBlock(\"div\", {\n            key: msg.id,\n            class: _normalizeClass(['chat-bubble', msg.sender_id === $setup.userId ? 'own' : 'other'])\n          }, [_createElementVNode(\"p\", null, _toDisplayString(msg.content), 1 /* TEXT */)], 2 /* CLASS */);\n        }), 128 /* KEYED_FRAGMENT */))])]),\n        _: 1 /* STABLE */\n      }), _createVNode($setup[\"IonFooter\"], null, {\n        default: _withCtx(() => [_createVNode($setup[\"IonToolbar\"], null, {\n          default: _withCtx(() => [_createVNode($setup[\"IonItem\"], null, {\n            end: _withCtx(() => [_createVNode($setup[\"IonButton\"], {\n              onClick: $setup.sendMessage\n            }, {\n              default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"Enviar\")])),\n              _: 1 /* STABLE */\n            })]),\n            default: _withCtx(() => [_createVNode($setup[\"IonInput\"], {\n              modelValue: $setup.newMessage,\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newMessage = $event),\n              placeholder: \"Escribe un mensaje...\"\n            }, null, 8 /* PROPS */, [\"modelValue\"])]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"is-open\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","$setup","default","_withCtx","_createCommentVNode","_createVNode","modelValue","selectedSegment","_cache","$event","value","_createTextVNode","_","_createElementBlock","_Fragment","_renderList","filteredChats","chat","key","id","onClick","openChat","lines","start","_createElementVNode","src","user_avatar","alt","_hoisted_1","_toDisplayString","username","last_message","selectedChat","onDidDismiss","closeChat","_hoisted_2","messages","msg","_normalizeClass","sender_id","userId","content","end","sendMessage","newMessage","placeholder"],"sources":["C:\\Users\\ellen\\Downloads\\App Myansite\\Myansite Ionic\\Myansite\\Myansite\\src\\views\\ChatsView.vue"],"sourcesContent":["<template>\r\n  <IonPage class=\"chat-page\">\r\n    <!-- Header con Segment -->\r\n    <IonHeader>\r\n      <IonToolbar>\r\n        <IonSegment v-model=\"selectedSegment\">\r\n          <IonSegmentButton value=\"comunes\">\r\n            <IonLabel>Comunes</IonLabel>\r\n          </IonSegmentButton>\r\n          <IonSegmentButton value=\"importantes\">\r\n            <IonLabel>Importantes</IonLabel>\r\n          </IonSegmentButton>\r\n        </IonSegment>\r\n      </IonToolbar>\r\n    </IonHeader>\r\n\r\n    <!-- Lista de chats -->\r\n    <IonContent class=\"ion-padding chat-content\">\r\n      <IonList>\r\n        <IonCard\r\n          v-for=\"chat in filteredChats\"\r\n          :key=\"chat.id\"\r\n          @click=\"openChat(chat)\"\r\n          class=\"chat-card\"\r\n        >\r\n          <IonItem lines=\"none\">\r\n            <!-- ✅ Migrado de slot=\"start\" -->\r\n            <template #start>\r\n              <IonAvatar>\r\n                <img :src=\"chat.user_avatar\" alt=\"avatar\" />\r\n              </IonAvatar>\r\n            </template>\r\n\r\n            <IonLabel>\r\n              <h2>{{ chat.username }}</h2>\r\n              <p>{{ chat.last_message }}</p>\r\n            </IonLabel>\r\n          </IonItem>\r\n        </IonCard>\r\n      </IonList>\r\n    </IonContent>\r\n\r\n    <!-- Modal de chat -->\r\n    <IonModal :is-open=\"selectedChat !== null\" @didDismiss=\"closeChat\">\r\n      <IonHeader>\r\n        <IonToolbar>\r\n          <!-- ✅ Migrado de slot=\"start\" -->\r\n          <template #start>\r\n            <IonButtons>\r\n              <IonButton @click=\"closeChat\">Cerrar</IonButton>\r\n            </IonButtons>\r\n          </template>\r\n\r\n          <IonTitle v-if=\"selectedChat\">{{ selectedChat.username }}</IonTitle>\r\n        </IonToolbar>\r\n      </IonHeader>\r\n\r\n      <IonContent class=\"chat-modal\">\r\n        <div class=\"chat-messages\">\r\n          <div\r\n            v-for=\"msg in messages\"\r\n            :key=\"msg.id\"\r\n            :class=\"['chat-bubble', msg.sender_id === userId ? 'own' : 'other']\"\r\n          >\r\n            <p>{{ msg.content }}</p>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n\r\n      <IonFooter>\r\n        <IonToolbar>\r\n          <IonItem>\r\n            <IonInput\r\n              v-model=\"newMessage\"\r\n              placeholder=\"Escribe un mensaje...\"\r\n            />\r\n            <!-- ✅ Migrado de slot=\"end\" -->\r\n            <template #end>\r\n              <IonButton @click=\"sendMessage\">Enviar</IonButton>\r\n            </template>\r\n          </IonItem>\r\n        </IonToolbar>\r\n      </IonFooter>\r\n    </IonModal>\r\n  </IonPage>\r\n</template>\r\n\r\n<script setup>\r\nimport {\r\n  IonPage,\r\n  IonHeader,\r\n  IonToolbar,\r\n  IonTitle,\r\n  IonContent,\r\n  IonList,\r\n  IonCard,\r\n  IonItem,\r\n  IonLabel,\r\n  IonAvatar,\r\n  IonButtons,\r\n  IonButton,\r\n  IonModal,\r\n  IonSegment,\r\n  IonSegmentButton,\r\n  IonFooter,\r\n  IonInput,\r\n} from \"@ionic/vue\";\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\n// 🔹 Conexión Supabase\r\nconst supabase = createClient(\r\n  \"https://neffqwnqpcydidpkysfi.supabase.co\",\r\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\" // ⚠️ pon tu key real\r\n);\r\n\r\nconst router = useRouter();\r\n\r\nconst selectedSegment = ref(\"comunes\");\r\nconst chats = ref([]);\r\nconst selectedChat = ref(null);\r\nconst messages = ref([]);\r\nconst newMessage = ref(\"\");\r\nconst userId = ref(null);\r\n\r\n// 🔹 Validar usuario logeado\r\nonMounted(async () => {\r\n  const { data, error } = await supabase.auth.getUser();\r\n  if (error || !data.user) {\r\n    router.push(\"/login\"); // Redirige a LoginView.vue\r\n    return;\r\n  }\r\n  userId.value = data.user.id;\r\n\r\n  // Cargar chats si hay usuario\r\n  const { data: chatData } = await supabase.from(\"chats\").select(\"*\");\r\n  chats.value = chatData || [];\r\n});\r\n\r\nconst filteredChats = computed(() => {\r\n  return chats.value.filter((c) => c.type === selectedSegment.value);\r\n});\r\n\r\n// 🔹 Abrir chat\r\nconst openChat = async (chat) => {\r\n  selectedChat.value = chat;\r\n  const { data } = await supabase\r\n    .from(\"messages\")\r\n    .select(\"*\")\r\n    .eq(\"chat_id\", chat.id)\r\n    .order(\"created_at\", { ascending: true });\r\n  messages.value = data || [];\r\n\r\n  // Escuchar mensajes en tiempo real\r\n  supabase\r\n    .channel(\"chat-room-\" + chat.id)\r\n    .on(\r\n      \"postgres_changes\",\r\n      {\r\n        event: \"INSERT\",\r\n        schema: \"public\",\r\n        table: \"messages\",\r\n        filter: `chat_id=eq.${chat.id}`,\r\n      },\r\n      (payload) => {\r\n        messages.value.push(payload.new);\r\n      }\r\n    )\r\n    .subscribe();\r\n};\r\n\r\n// 🔹 Cerrar modal\r\nconst closeChat = () => {\r\n  selectedChat.value = null;\r\n  messages.value = [];\r\n};\r\n\r\n// 🔹 Enviar mensaje\r\nconst sendMessage = async () => {\r\n  if (!newMessage.value.trim() || !selectedChat.value) return;\r\n\r\n  await supabase.from(\"messages\").insert([\r\n    {\r\n      chat_id: selectedChat.value.id,\r\n      sender_id: userId.value,\r\n      content: newMessage.value,\r\n    },\r\n  ]);\r\n\r\n  newMessage.value = \"\";\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.chat-page {\r\n  background: url(\"@/assets/WhatsApp Image 2025-08-24 at 4.21.32 PM.jpeg\")\r\n    center/cover no-repeat;\r\n}\r\n\r\n.chat-card {\r\n  border-radius: 20px;\r\n  margin-bottom: 10px;\r\n  background: rgba(255, 255, 255, 0.85);\r\n  backdrop-filter: blur(6px);\r\n}\r\n\r\n.chat-content {\r\n  --background: transparent;\r\n}\r\n\r\n.chat-modal {\r\n  --background: #f5f5f5;\r\n}\r\n\r\n.chat-messages {\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-bubble {\r\n  max-width: 75%;\r\n  margin: 5px 0;\r\n  padding: 10px;\r\n  border-radius: 15px;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.chat-bubble.own {\r\n  align-self: flex-end;\r\n  background: #5c6bc0;\r\n  color: white;\r\n}\r\n\r\n.chat-bubble.other {\r\n  align-self: flex-start;\r\n  background: #e0e0e0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}