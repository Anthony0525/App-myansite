{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  id: \"charactersContainer\",\n  class: \"characters-container\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"src\", \"alt\"];\nconst _hoisted_4 = {\n  key: 1,\n  id: \"detailView\"\n};\nconst _hoisted_5 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Listado de personajes \"), !$data.selectedCharacter ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.characters, character => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: character.id,\n      class: \"character-card\",\n      onClick: $event => $options.showDetail(character)\n    }, [_createElementVNode(\"img\", {\n      src: character.image,\n      alt: character.name\n    }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"h1\", null, _toDisplayString(character.name), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(character.species), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(character.status), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString(character.location.name), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Vista detalle \"), $data.selectedCharacter ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"Volver\"), _createElementVNode(\"h1\", null, _toDisplayString($data.selectedCharacter.name), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $data.selectedCharacter.image,\n    alt: \"Personaje\"\n  }, null, 8 /* PROPS */, _hoisted_5), _cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Episodios:\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.episodes, ep => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: ep.id\n    }, _toDisplayString(ep.episode) + \" - \" + _toDisplayString(ep.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["key","id","class","_createElementBlock","_createCommentVNode","$data","selectedCharacter","_hoisted_1","_Fragment","_renderList","characters","character","onClick","$event","$options","showDetail","_createElementVNode","src","image","alt","name","_hoisted_3","_toDisplayString","species","status","location","_hoisted_2","_hoisted_4","_cache","args","goBack","_hoisted_5","episodes","ep","episode"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\RickAndMorty.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Listado de personajes -->\r\n    <div id=\"charactersContainer\" class=\"characters-container\" v-if=\"!selectedCharacter\">\r\n      <div \r\n        v-for=\"character in characters\" \r\n        :key=\"character.id\" \r\n        class=\"character-card\"\r\n        @click=\"showDetail(character)\"\r\n      >\r\n        <img :src=\"character.image\" :alt=\"character.name\" />\r\n        <h1>{{ character.name }}</h1>\r\n        <p>{{ character.species }}</p>\r\n        <p>{{ character.status }}</p>\r\n        <p>{{ character.location.name }}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Vista detalle -->\r\n    <div id=\"detailView\" v-if=\"selectedCharacter\">\r\n      <button @click=\"goBack\">Volver</button>\r\n      <h1>{{ selectedCharacter.name }}</h1>\r\n      <img :src=\"selectedCharacter.image\" alt=\"Personaje\" />\r\n      <h2>Episodios:</h2>\r\n      <ul>\r\n        <li v-for=\"ep in episodes\" :key=\"ep.id\">\r\n          {{ ep.episode }} - {{ ep.name }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"RickAndMorty\",\r\n  data() {\r\n    return {\r\n      characters: [],          \r\n      selectedCharacter: null, \r\n      episodes: []             \r\n    };\r\n  },\r\n  mounted() {\r\n    this.getCharacters();\r\n  },\r\n  methods: {\r\n    async getCharacters() {\r\n      try {\r\n        const res = await fetch(\"https://rickandmortyapi.com/api/character\");\r\n        const data = await res.json();\r\n        this.characters = data.results;\r\n      } catch (error) {\r\n        console.error(\"Error al traer personajes:\", error);\r\n      }\r\n    },\r\n    async showDetail(character) {\r\n      this.selectedCharacter = character;\r\n      try {\r\n        const episodesData = await Promise.all(\r\n          character.episode.map(url => fetch(url).then(r => r.json()))\r\n        );\r\n        this.episodes = episodesData;\r\n      } catch (error) {\r\n        console.error(\"Error al traer episodios:\", error);\r\n      }\r\n    },\r\n    goBack() {\r\n      this.selectedCharacter = null;\r\n      this.episodes = [];\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.characters-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin: 2rem;\r\n}\r\n\r\n.character-card {\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n  padding: 1rem;\r\n  text-align: center;\r\n  background: #f9f9f9;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.character-card:hover {\r\n  transform: scale(1.05);\r\n  cursor: pointer;\r\n}\r\n\r\n.character-card img {\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 50%;\r\n}\r\n</style>\r\n"],"mappings":";;EAAAA,GAAA;EAGSC,EAAE,EAAC,qBAAqB;EAACC,KAAK,EAAC;;mBAHxC;mBAAA;;EAAAF,GAAA;EAmBSC,EAAE,EAAC;;mBAnBZ;;uBACEE,mBAAA,CA6BM,cA5BJC,mBAAA,2BAA8B,E,CACoCC,KAAA,CAAAC,iBAAiB,I,cAAnFH,mBAAA,CAaM,OAbNI,UAaM,I,kBAZJJ,mBAAA,CAWMK,SAAA,QAfZC,WAAA,CAK4BJ,KAAA,CAAAK,UAAU,EAAvBC,SAAS;yBADlBR,mBAAA,CAWM;MATHH,GAAG,EAAEW,SAAS,CAACV,EAAE;MAClBC,KAAK,EAAC,gBAAgB;MACrBU,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACJ,SAAS;QAE5BK,mBAAA,CAAoD;MAA9CC,GAAG,EAAEN,SAAS,CAACO,KAAK;MAAGC,GAAG,EAAER,SAAS,CAACS;4BAVpDC,UAAA,GAWQL,mBAAA,CAA6B,YAAAM,gBAAA,CAAtBX,SAAS,CAACS,IAAI,kBACrBJ,mBAAA,CAA8B,WAAAM,gBAAA,CAAxBX,SAAS,CAACY,OAAO,kBACvBP,mBAAA,CAA6B,WAAAM,gBAAA,CAAvBX,SAAS,CAACa,MAAM,kBACtBR,mBAAA,CAAoC,WAAAM,gBAAA,CAA9BX,SAAS,CAACc,QAAQ,CAACL,IAAI,iB,iBAdrCM,UAAA;sCAAAtB,mBAAA,gBAkBIA,mBAAA,mBAAsB,EACKC,KAAA,CAAAC,iBAAiB,I,cAA5CH,mBAAA,CAUM,OAVNwB,UAUM,GATJX,mBAAA,CAAuC;IAA9BJ,OAAK,EAAAgB,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEf,QAAA,CAAAgB,MAAA,IAAAhB,QAAA,CAAAgB,MAAA,IAAAD,IAAA,CAAM;KAAE,QAAM,GAC9Bb,mBAAA,CAAqC,YAAAM,gBAAA,CAA9BjB,KAAA,CAAAC,iBAAiB,CAACc,IAAI,kBAC7BJ,mBAAA,CAAsD;IAAhDC,GAAG,EAAEZ,KAAA,CAAAC,iBAAiB,CAACY,KAAK;IAAEC,GAAG,EAAC;0BAtB9CY,UAAA,G,0BAuBMf,mBAAA,CAAmB,YAAf,YAAU,sBACdA,mBAAA,CAIK,c,kBAHHb,mBAAA,CAEKK,SAAA,QA3BbC,WAAA,CAyByBJ,KAAA,CAAA2B,QAAQ,EAAdC,EAAE;yBAAb9B,mBAAA,CAEK;MAFuBH,GAAG,EAAEiC,EAAE,CAAChC;wBAC/BgC,EAAE,CAACC,OAAO,IAAG,KAAG,GAAAZ,gBAAA,CAAGW,EAAE,CAACb,IAAI;wCA1BvChB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}