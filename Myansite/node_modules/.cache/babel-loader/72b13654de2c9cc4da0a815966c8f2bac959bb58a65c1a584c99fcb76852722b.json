{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport LoadingScreen from './views/PantallaCarga.vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'App',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const loadingState = ref('loading');\n    const router = useRouter();\n    onMounted(() => {\n      // Simula el tiempo de carga inicial y luego cambia el estado\n      setTimeout(() => {\n        loadingState.value = 'loaded';\n      }, 1000); // Ajusta este tiempo según tus necesidades\n\n      // Opcional: Escucha el evento de cambio de ruta para mostrar la carga en cada navegación\n      router.beforeEach((to, from, next) => {\n        loadingState.value = 'loading';\n        next();\n      });\n      router.afterEach(() => {\n        // Cuando la ruta se ha cargado, oculta la pantalla de carga\n        setTimeout(() => {\n          loadingState.value = 'loaded';\n        }, 4000); // Un pequeño retraso para una transición suave\n      });\n    });\n    const __returned__ = {\n      loadingState,\n      router,\n      ref,\n      onMounted,\n      LoadingScreen,\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","LoadingScreen","useRouter","loadingState","router","setTimeout","value","beforeEach","to","from","next","afterEach"],"sources":["C:/Users/ellen/Downloads/App en Vue/Myansite/Myansite/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <LoadingScreen v-if=\"loadingState === 'loading'\" />\n    \n    <router-view v-else />\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport LoadingScreen from './views/PantallaCarga.vue';\nimport { useRouter } from 'vue-router';\n\nconst loadingState = ref('loading');\nconst router = useRouter();\n\nonMounted(() => {\n  // Simula el tiempo de carga inicial y luego cambia el estado\n  setTimeout(() => {\n    loadingState.value = 'loaded';\n  }, 1000); // Ajusta este tiempo según tus necesidades\n  \n  // Opcional: Escucha el evento de cambio de ruta para mostrar la carga en cada navegación\n  router.beforeEach((to, from, next) => {\n    loadingState.value = 'loading';\n    next();\n  });\n  \n  router.afterEach(() => {\n    // Cuando la ruta se ha cargado, oculta la pantalla de carga\n    setTimeout(() => {\n      loadingState.value = 'loaded';\n    }, 4000); // Un pequeño retraso para una transición suave\n  });\n});\n</script>"],"mappings":"AASA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,OAAOC,aAAa,MAAM,2BAA2B;AACrD,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,YAAY,GAAGJ,GAAG,CAAC,SAAS,CAAC;IACnC,MAAMK,MAAM,GAAGF,SAAS,CAAC,CAAC;IAE1BF,SAAS,CAAC,MAAM;MACd;MACAK,UAAU,CAAC,MAAM;QACfF,YAAY,CAACG,KAAK,GAAG,QAAQ;MAC/B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV;MACAF,MAAM,CAACG,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;QACpCP,YAAY,CAACG,KAAK,GAAG,SAAS;QAC9BI,IAAI,CAAC,CAAC;MACR,CAAC,CAAC;MAEFN,MAAM,CAACO,SAAS,CAAC,MAAM;QACrB;QACAN,UAAU,CAAC,MAAM;UACfF,YAAY,CAACG,KAAK,GAAG,QAAQ;QAC/B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}