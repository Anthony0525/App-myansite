{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  name: \"RickAndMorty\",\n  mounted() {\n    // cuando el componente se monta, llamamos tu JS\n    this.getFilesFromApi();\n  },\n  methods: {\n    async getFilesFromApi() {\n      const apiUrl = \"https://rickandmortyapi.com/api/character\";\n      try {\n        const response = await fetch(apiUrl);\n        const data = await response.json();\n        this.createCharacterCards(data.results);\n      } catch (err) {\n        console.error(\"Error al traer API:\", err);\n      }\n    },\n    createCharacterCards(characters) {\n      const charactersContainer = document.getElementById(\"charactersContainer\");\n      charactersContainer.innerHTML = \"\";\n      characters.forEach(character => {\n        const card = document.createElement(\"div\");\n        card.classList.add(\"character-card\");\n        const imageElement = document.createElement(\"img\");\n        imageElement.src = character.image;\n        const nameElement = document.createElement(\"h1\");\n        nameElement.textContent = character.name;\n        const speciesElement = document.createElement(\"p\");\n        speciesElement.textContent = character.species;\n        const statusElement = document.createElement(\"p\");\n        statusElement.textContent = character.status;\n        const lastknownElement = document.createElement(\"p\");\n        lastknownElement.textContent = character.location.name;\n        card.appendChild(imageElement);\n        card.appendChild(nameElement);\n        card.appendChild(speciesElement);\n        card.appendChild(statusElement);\n        card.appendChild(lastknownElement);\n\n        // evento click -> vista detalle\n        card.addEventListener(\"click\", () => {\n          this.showDetailView(character.id);\n        });\n        charactersContainer.appendChild(card);\n      });\n    },\n    async showDetailView(characterId) {\n      document.getElementById(\"charactersContainer\").style.display = \"none\";\n      const detailView = document.getElementById(\"detailView\");\n      detailView.style.display = \"block\";\n      const character = await fetch(`https://rickandmortyapi.com/api/character/${characterId}`).then(r => r.json());\n      detailView.innerHTML = `\n        <button id=\"backBtn\">Volver</button>\n        <h1 id=\"characterName\">${character.name}</h1>\n        <img id=\"characterImage\" src=\"${character.image}\" alt=\"Personaje\"/>\n        <h2>Episodios:</h2>\n        <ul id=\"episodesList\"></ul>\n      `;\n      const episodesList = document.getElementById(\"episodesList\");\n      const episodes = await Promise.all(character.episode.map(url => fetch(url).then(r => r.json())));\n      episodes.forEach(ep => {\n        const li = document.createElement(\"li\");\n        li.textContent = `${ep.episode} - ${ep.name}`;\n        episodesList.appendChild(li);\n      });\n\n      // botón volver\n      document.getElementById(\"backBtn\").onclick = () => {\n        detailView.style.display = \"none\";\n        detailView.innerHTML = \"\";\n        document.getElementById(\"charactersContainer\").style.display = \"grid\";\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","mounted","getFilesFromApi","methods","apiUrl","response","fetch","data","json","createCharacterCards","results","err","console","error","characters","charactersContainer","document","getElementById","innerHTML","forEach","character","card","createElement","classList","add","imageElement","src","image","nameElement","textContent","speciesElement","species","statusElement","status","lastknownElement","location","appendChild","addEventListener","showDetailView","id","characterId","style","display","detailView","then","r","episodesList","episodes","Promise","all","episode","map","url","ep","li","onclick"],"sources":["C:\\Users\\ellen\\Downloads\\proyectoxample\\proyectoxample\\src\\views\\RickAndMorty.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Listado de personajes -->\r\n    <div id=\"charactersContainer\" class=\"characters-grid\"></div>\r\n\r\n    <!-- Vista detalle (oculta al inicio) -->\r\n    <div id=\"detailView\" style=\"display:none;\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"RickAndMorty\",\r\n  mounted() {\r\n    // cuando el componente se monta, llamamos tu JS\r\n    this.getFilesFromApi();\r\n  },\r\n  methods: {\r\n    async getFilesFromApi() {\r\n      const apiUrl = \"https://rickandmortyapi.com/api/character\";\r\n      try {\r\n        const response = await fetch(apiUrl);\r\n        const data = await response.json();\r\n        this.createCharacterCards(data.results);\r\n      } catch (err) {\r\n        console.error(\"Error al traer API:\", err);\r\n      }\r\n    },\r\n    createCharacterCards(characters) {\r\n      const charactersContainer = document.getElementById(\"charactersContainer\");\r\n      charactersContainer.innerHTML = \"\";\r\n      characters.forEach((character) => {\r\n        const card = document.createElement(\"div\");\r\n        card.classList.add(\"character-card\");\r\n\r\n        const imageElement = document.createElement(\"img\");\r\n        imageElement.src = character.image;\r\n\r\n        const nameElement = document.createElement(\"h1\");\r\n        nameElement.textContent = character.name;\r\n\r\n        const speciesElement = document.createElement(\"p\");\r\n        speciesElement.textContent = character.species;\r\n\r\n        const statusElement = document.createElement(\"p\");\r\n        statusElement.textContent = character.status;\r\n\r\n        const lastknownElement = document.createElement(\"p\");\r\n        lastknownElement.textContent = character.location.name;\r\n\r\n        card.appendChild(imageElement);\r\n        card.appendChild(nameElement);\r\n        card.appendChild(speciesElement);\r\n        card.appendChild(statusElement);\r\n        card.appendChild(lastknownElement);\r\n\r\n        // evento click -> vista detalle\r\n        card.addEventListener(\"click\", () => {\r\n          this.showDetailView(character.id);\r\n        });\r\n\r\n        charactersContainer.appendChild(card);\r\n      });\r\n    },\r\n    async showDetailView(characterId) {\r\n      document.getElementById(\"charactersContainer\").style.display = \"none\";\r\n\r\n      const detailView = document.getElementById(\"detailView\");\r\n      detailView.style.display = \"block\";\r\n\r\n      const character = await fetch(`https://rickandmortyapi.com/api/character/${characterId}`).then(r => r.json());\r\n\r\n      detailView.innerHTML = `\r\n        <button id=\"backBtn\">Volver</button>\r\n        <h1 id=\"characterName\">${character.name}</h1>\r\n        <img id=\"characterImage\" src=\"${character.image}\" alt=\"Personaje\"/>\r\n        <h2>Episodios:</h2>\r\n        <ul id=\"episodesList\"></ul>\r\n      `;\r\n\r\n      const episodesList = document.getElementById(\"episodesList\");\r\n      const episodes = await Promise.all(character.episode.map(url => fetch(url).then(r => r.json())));\r\n      episodes.forEach(ep => {\r\n        const li = document.createElement(\"li\");\r\n        li.textContent = `${ep.episode} - ${ep.name}`;\r\n        episodesList.appendChild(li);\r\n      });\r\n\r\n      // botón volver\r\n      document.getElementById(\"backBtn\").onclick = () => {\r\n        detailView.style.display = \"none\";\r\n        detailView.innerHTML = \"\";\r\n        document.getElementById(\"charactersContainer\").style.display = \"grid\";\r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.characters-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n  gap: 1rem;\r\n}\r\n.character-card {\r\n  border: 1px solid #ccc;\r\n  padding: 1rem;\r\n  border-radius: 12px;\r\n  text-align: center;\r\n}\r\n.character-card img {\r\n  width: 100%;\r\n  border-radius: 12px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}